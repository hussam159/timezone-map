{"version":3,"file":"spacetime.js","sources":["../src/fns.js","../src/timezone/summerTime.js","../src/timezone/quick.js","../zonefile/_prefixes.js","../zonefile/unpack.js","../zonefile/informal.js","../src/timezone/guessTz.js","../src/timezone/find.js","../src/data/milliseconds.js","../src/methods/set/walk.js","../src/data/months.js","../src/input/parseOffset.js","../src/input/parseTime.js","../src/data/monthLengths.js","../src/input/hasDate.js","../src/input/strParse.js","../src/input/named-dates.js","../src/input/index.js","../src/data/days.js","../src/methods/format/_offset.js","../src/methods/format/index.js","../src/methods/format/unixFmt.js","../src/methods/progress.js","../src/methods/nearest.js","../src/methods/diff/one.js","../src/methods/diff/waterfall.js","../src/methods/diff/index.js","../src/methods/since.js","../src/data/seasons.js","../src/data/quarters.js","../src/methods/startOf.js","../src/methods/every.js","../src/timezone/display.js","../src/timezone/index.js","../src/methods.js","../src/methods/set/set.js","../src/methods/query/01-time.js","../src/methods/query/02-date.js","../src/methods/query/03-year.js","../src/methods/query/index.js","../src/methods/add.js","../src/methods/same.js","../src/methods/compare.js","../src/methods/i18n.js","../src/spacetime.js","../src/whereIts.js","../_version.js","../src/index.js"],"sourcesContent":["//git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\nexports.isLeapYear = year => (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n// unsurprisingly-nasty `typeof date` call\nexports.isDate = d => Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf())\nexports.isArray = input => Object.prototype.toString.call(input) === '[object Array]'\nexports.isObject = input => Object.prototype.toString.call(input) === '[object Object]'\n\nexports.zeroPad = (str, len = 2) => {\n  let pad = '0'\n  str = str + ''\n  return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str\n}\n\nexports.titleCase = str => {\n  if (!str) {\n    return ''\n  }\n  return str[0].toUpperCase() + str.substr(1)\n}\n\nexports.ordinal = i => {\n  let j = i % 10\n  let k = i % 100\n  if (j === 1 && k !== 11) {\n    return i + 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return i + 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return i + 'rd'\n  }\n  return i + 'th'\n}\n\n//strip 'st' off '1st'..\nexports.toCardinal = str => {\n  str = String(str)\n  str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1')\n  return parseInt(str, 10)\n}\n\n//used mostly for cleanup of unit names, like 'months'\nexports.normalize = (str = '') => {\n  str = str.toLowerCase().trim()\n  str = str.replace(/ies$/, 'y') //'centuries'\n  str = str.replace(/s$/, '')\n  str = str.replace(/-/g, '')\n  if (str === 'day') {\n    return 'date'\n  }\n  return str\n}\n\nexports.getEpoch = tmp => {\n  //support epoch\n  if (typeof tmp === 'number') {\n    return tmp\n  }\n  //suport date objects\n  if (exports.isDate(tmp)) {\n    return tmp.getTime()\n  }\n  if (tmp.epoch) {\n    return tmp.epoch\n  }\n  return null\n}\n\n//make sure this input is a spacetime obj\nexports.beADate = (d, s) => {\n  if (exports.isObject(d) === false) {\n    return s.clone().set(d)\n  }\n  return d\n}\n\nexports.formatTimezone = (offset, delimiter = '') => {\n  const absOffset = Math.abs(offset)\n  const sign = offset > 0 ? '+' : '-'\n  return `${sign}${exports.zeroPad(absOffset)}${delimiter}00`\n}\n","const zeroPad = require('../fns').zeroPad\n\nconst toString = d =>\n  zeroPad(d.getMonth() + 1) + '/' + zeroPad(d.getDate()) + ':' + zeroPad(d.getHours())\n\n// a timezone will begin with a specific offset in january\n// then some will switch to something else between november-march\nconst shouldChange = (epoch, start, end, defaultOffset) => {\n  //note: this has a cray order-of-operations issue\n  //we can't get the date, without knowing the timezone, and vice-versa\n  //it's possible that we can miss a dst-change by a few hours.\n  let d = new Date(epoch)\n  //(try to mediate this a little?)\n  let bias = d.getTimezoneOffset() || 0\n  let shift = bias + defaultOffset * 60 //in minutes\n  shift = shift * 60 * 1000 //in ms\n  d = new Date(epoch + shift)\n\n  let current = toString(d)\n  //eg. is it after ~november?\n  if (current >= start) {\n    //eg. is it before ~march~ too?\n    if (current < end) {\n      return true\n    }\n  }\n  return false\n}\nmodule.exports = shouldChange\n","const isSummer = require('./summerTime')\n\n// this method avoids having to do a full dst-calculation on every operation\n// it reproduces some things in ./index.js, but speeds up spacetime considerably\nconst quickOffset = s => {\n  let zones = s.timezones\n  let obj = zones[s.tz]\n  if (obj === undefined) {\n    console.warn(\"Warning: couldn't find timezone \" + s.tz)\n    return 0\n  }\n  if (obj.dst === undefined) {\n    return obj.offset\n  }\n\n  //get our two possible offsets\n  let jul = obj.offset\n  let dec = obj.offset + 1 // assume it's the same for now\n  if (obj.hem === 'n') {\n    dec = jul - 1\n  }\n  let split = obj.dst.split('->')\n  let inSummer = isSummer(s.epoch, split[0], split[1], jul)\n  if (inSummer === true) {\n    return jul\n  }\n  return dec\n}\nmodule.exports = quickOffset\n","//prefixes for iana names..\nmodule.exports = [\n  'africa',\n  'america',\n  'asia',\n  'atlantic',\n  'australia',\n  'brazil',\n  'canada',\n  'chile',\n  'europe',\n  'indian',\n  'mexico',\n  'pacific',\n  'antarctica',\n  'etc'\n]\n","const data = require('./_build.json')\nconst prefixes = require('./_prefixes.js')\n\nlet all = {}\nObject.keys(data).forEach(k => {\n  let split = k.split('|')\n  let obj = {\n    offset: Number(split[0]),\n    hem: split[1]\n  }\n  if (split[2]) {\n    obj.dst = split[2]\n  }\n  let names = data[k].split(',')\n  names.forEach(str => {\n    str = str.replace(/(^[0-9]+)\\//, (before, num) => {\n      num = Number(num)\n      return prefixes[num] + '/'\n    })\n    all[str] = obj\n  })\n})\n\nall['utc'] = {\n  offset: 0,\n  hem: 'n' //(sorry)\n}\n\n//add etc/gmt+n\nfor (let i = -13; i <= 13; i += 0.5) {\n  let num = i\n  if (num > 0) {\n    num = '+' + num\n  }\n  let name = 'etc/gmt' + num\n  all[name] = {\n    offset: i * -1, //they're negative!\n    hem: 'n' //(sorry)\n  }\n  name = 'utc/gmt' + num //this one too, why not.\n  all[name] = {\n    offset: i * -1,\n    hem: 'n'\n  }\n}\n// console.log(all)\n\n// console.log(Object.keys(all).length)\nmodule.exports = all\n","// this is a very rough list of informal and abbreviated timezones\n// i am not an expert, or even half-knowledgeable in this subject.\n// please help.\n// partially from: https://en.wikipedia.org/wiki/list_of_time_zone_abbreviations\n\n//format:  'best/iana': [standard, daylight, alias...]\nconst informal = {\n  //north america\n  'america/halifax': ['ast', 'adt', 'atlantic'], //or 'arabia standard time'\n  'america/new_york': ['est', 'edt', 'eastern'], //or 'Ecuador Time'\n  'america/chicago': ['cst', 'cdt', 'central'],\n  'america/denver': ['mst', 'mdt', 'mountain'],\n  'america/los_angeles': ['pst', 'pdt', 'pacific'],\n  'america/anchorage': ['ahst', 'ahdt', 'akst', 'akdt', 'alaska'], //Alaska Standard Time\n  'america/st_johns': ['nst', 'ndt', 'nt', 'newfoundland', 'nddt'],\n\n  //south america\n  'america/caracas': ['vet', null, 'venezuela'],\n  'america/bogota': ['cot', null, 'colombia'],\n  'america/cayenne': ['gft', null, 'french guiana'],\n  'america/paramaribo': ['srt', null, 'suriname'],\n  'america/guyana': ['gyt'],\n  'america/buenos_aires': ['art', null, 'argentina'],\n  'america/la_paz': ['bot', null, 'bolivia'],\n  'america/asuncion': ['pyt', 'pyst', 'paraguay'],\n  'america/santiago': ['clt', 'clst', 'chile'],\n  'america/lima': ['pet', null, 'peru'],\n  'america/montevideo': ['uyt', null, 'uruguay'],\n  'atlantic/stanley': ['fkst', null, 'falkland island'],\n  //brazil\n  'america/manaus': ['amt'],\n  'america/sao_paulo': ['brt', 'brst'],\n  'brazil/acre': ['act'],\n  // amst: -3, //amazon summer time (brazil)\n  // fnt: -2, //fernando de noronha time\n  // pmdt: -2, //saint pierre and miquelon daylight time\n  // pmst: -3, //saint pierre and miquelon standard time\n  // rott: -3, //rothera research station time\n\n  // awt: 'america/blanc-sablon',\n  // addt: 'america/pangnirtung',\n  // apt: 'america/blanc-sablon',\n  // cddt: 'america/rankin_inlet',\n  // cwt: 'america/mexico_city',\n  // cpt: 'america/atikokan',\n  // eddt: 'america/iqaluit',\n  // ept: 'america/detroit',\n  // ewt: 'america/detroit',\n  // ect: 'america/anguilla', //eastern caribbean time (does not recognise dst)\n  // 'eastern caribbean': 'america/anguilla',\n  // ffmt: 'america/martinique',\n  // kmt: 'america/grand_turk',\n  // mddt: 'america/cambridge_bay',\n  // mpt: 'america/boise',\n  // mwt: 'america/phoenix',\n  // nwt: 'america/adak',\n  // // npt: 'america/goose_bay',\n  // pddt: 'america/inuvik',\n  // ppmt: 'america/port-au-prince',\n  // ppt: 'america/dawson_creek',\n  // pwt: 'america/dawson_creek',\n  // qmt: 'america/guayaquil',\n  // sdmt: 'america/santo_domingo',\n  // sjmt: 'america/costa_rica',\n  // ydt: 'america/dawson', //yukon\n  // ypt: 'america/dawson',\n  // yddt: 'america/dawson',\n  // ywt: 'america/dawson',\n  // yst: 'america/whitehorse',\n\n  //europe\n  'europe/london': ['gmt', 'bst', 'british'], //britain is different\n  'etc/gmt': ['gmt', null, 'greenwich'],\n  'europe/lisbon': ['wet', 'west', 'west europe'], //western europe\n  'europe/berlin': ['cet', 'cest', 'central europe', 'middle european', 'met', 'mest'], //central europe\n  'europe/riga': ['eet', 'eest', 'east europe', 'kalt'], //eastern europe\n  // -- these are old european ones, before the EU, i think:\n  // 'europe/minsk': ['feet', 'feest', 'eastern europe'], //further eastern europe (discontinued)\n  // ace: 'europe/dublin',\n  // amt: 'europe/amsterdam',\n  // bdst: 'europe/gibraltar',\n  // bmt: 'europe/brussels',\n  // bst: 'europe/gibraltar', //british summer time\n  // 'british summer': 1,\n  // dmt: 'europe/dublin',\n  // dft: 1, //aix-specific equivalent of central european time\n  // cmt: 'europe/copenhagen',\n  // // ist: 'europe/dublin',\n  // imt: 'europe/sofia',\n  // lst: 'europe/riga',\n  // pmt: 'europe/prague',\n  // rmt: 'europe/rome',\n  // set: 'europe/stockholm',\n  // wemt: 'europe/madrid',\n  // tse: 'europe/dublin',\n  // utc: 'etc/utc', //coordinated universal time\n  // 'coordinated universal': 'etc/utc',\n\n  //russia\n  'europe/moscow': ['msk', null, 'fet', 'mdst', 'msd'], //'further eastern europe'\n  'europe/samara': ['samt'],\n  'asia/yekaterinburg': ['yekt'],\n  'asia/omsk': ['omst'],\n  'asia/krasnoyarsk': ['krat'],\n  'asia/novosibirsk': ['novt'],\n  'asia/irkutsk': ['irkt'],\n  'asia/yakutsk': ['yakt'],\n  'asia/vladivostok': ['vlat'],\n  'asia/magadan': ['magt'],\n  'asia/sakhalin': ['sakt'],\n  'asia/srednekolymsk': ['sret'],\n  'asia/anadyr': ['anat'],\n  'asia/kamchatka': ['pett'],\n\n  //near-russia\n  'asia/tashkent': ['uzt', 'uzbekistan'], //uzbekistan time\n  'asia/bishkek': ['kgt', 'kyrgyzstan'], //kyrgyzstan time\n  'antarctica/vostok': ['vost'],\n  'asia/hovd': ['hovt'],\n  'asia/ashgabat': ['tmt', null, 'turkmenistan'],\n  // wmt: 'europe/warsaw',\n  // 'europe/volgograd':['volt']\n\n  //africa\n  'africa/lagos': ['wat', 'wast', 'west africa'], //west african\n  'africa/khartoum': ['cat', null, 'central africa'],\n  'africa/nairobi': ['eat', null, 'east africa'],\n  'atlantic/cape_verde': ['cvt'],\n  'indian/mauritius': ['mut'],\n  'indian/reunion': ['ret'],\n  'africa/johannesburg': ['sast', null, 'south africa'],\n\n  //atlantic\n  'atlantic/azores': ['azot', 'azost', 'hmt'],\n  'america/godthab': ['wgt', 'wgst', 'west greenland'],\n  'america/scoresbysund': ['egt', 'egst', 'east greenland'],\n\n  //middle-east\n  'europe/istanbul': ['trt', null, 'turkey'],\n  'asia/tbilisi': ['get', null, 'georgia'],\n  // 'asia/yerevan': ['amt', null, 'armenia'], //(sorry!)\n  'asia/baku': ['azt', null, 'azerbaijan'],\n  'asia/jerusalem': [null, 'idt', 'israel', 'jmt', 'iddt'], //using ist for india\n  'asia/tehran': ['irst', 'irdt', 'iran'],\n  'asia/karachi': ['pkt', null, 'pakistan'],\n  'asia/kabul': ['aft', null, 'afghanistan'],\n  'asia/dushanbe': ['tjt', null, 'tajikistan'],\n  'asia/almaty': ['almt', null, 'alma ata'],\n  'asia/dubai': ['gst', null, 'gulf'],\n\n  //india\n  'asia/kolkata': ['ist', null, 'india', 'slst'],\n  // 'asia/dhaka': ['bst', null, 'bangladesh'], //(sorry)\n  'asia/thimbu': ['btt', null, 'bhutan'],\n  'indian/maldives': ['mvt'],\n  'asia/kathmandu': ['npt', null, 'nepal'],\n  'indian/cocos': ['cct', null, 'cocos island'],\n  'indian/chagos': ['iot', null, 'indian chagos'],\n  'indian/kerguelen': ['tft', null, 'french southern and antarctic'],\n  // biot: 6, //british indian ocean time\n  // iot: 3, //indian ocean time\n\n  //asia\n  'asia/shanghai': ['ct', null, 'china', 'hkt'],\n  'asia/ulaanbaatar': ['ulat'],\n  'asia/seoul': ['kst', null, 'korea'],\n  'asia/tokyo': ['jst', null, 'japan'],\n  'asia/phnom_penh': ['ict', null, 'indochina'],\n  'asia/manila': ['pht', null, 'philippines'],\n  'asia/singapore': ['sgt'],\n  // mmt: 'asia/colombo',\n\n  //australia\n  'australia/brisbane': ['aest', 'aedt', 'australian east'], //australian eastern standard time\n  'australia/adelaide': ['acst', 'acdt', 'australian central'], //australian central daylight savings time\n  'australia/eucla': ['acwst', null, 'cwst', 'australian central western'], //australian central western standard time (unofficial)\n  'australia/perth': ['awst', 'awdt', 'australian west'], //australian western standard time\n  'pacific/auckland': ['nzst', 'nzdt', 'nzmt'],\n  'australia/lord_howe': ['lhst', 'lhdt'],\n\n  //pacific\n  'pacific/guam': ['chst'],\n  'pacific/chatham': ['chast', 'chadt'],\n  'pacific/honolulu': ['hst'],\n  'asia/brunei': ['bnt', null, 'bdt'],\n  'pacific/midway': ['sst', null, 'samoa', 'sdt'],\n  'pacific/niue': ['nut'],\n  'pacific/fakaofo': ['tkt'],\n  'pacific/rarotonga': ['ckt', null, 'cook islands'],\n  'chile/easterisland': ['east', 'easst', 'easter island', 'emt'],\n  'asia/jayapura': ['wit', null, 'east indonesia'],\n  'asia/jakarta': ['wib', null, 'west indonesia'],\n  'asia/makassar': ['wita', null, 'central indonesia'],\n  'pacific/galapagos': ['galt'],\n  'pacific/fiji': ['fjt', 'fjst'],\n  'asia/dili': ['tlt', null, 'east timor'],\n  'indian/christmas': ['cxt']\n  // sbt: 11, //solomon islands time\n  // mht: 12, //marshall islands time\n  // bit: -12, //baker island time\n  // cist: -8, //clipperton island standard time\n  // chut: 10, //chuuk time\n  // ddut: 10, //dumont durville time\n  // gst: 'pacific/guam',\n  // gamt: -9, //gambier islands time\n  // git: -9, //gambier island time\n  // gilt: 12, //gilbert island time\n  // idlw: -12, //international day line west time zone\n  // 'international day line west': -12,\n  // kost: 11, //kosrae time\n  // lint: 14, //line islands time\n  // magt: 12, //magadan time\n  // mist: 11, //macquarie island station time\n  // nct: 11, //new caledonia time\n  // nft: 11, //norfolk island time\n  // phot: 13, //phoenix island time\n  // pont: 11, //pohnpei standard time\n  // pett: 12, //kamchatka time\n  // mart: -9.5, //marquesas islands time\n  // mit: -9.5, //marquesas islands time\n  // myt: 8, //malaysia time\n  // nut: -11, //niue time\n  // pht: 8, //philippine time\n  // pgt: 10, //papua new guinea time\n  // pmmt: 'pacific/bougainville',\n  // // smt: 'asia/singapore',\n  // sakt: 11, //sakhalin island time\n  // sret: 11, //srednekolymsk time\n  // sst: 'pacific/pago_pago',\n  // taht: -10, //tahiti time\n  // tvt: 12, //tuvalu time\n  // tkt: 13, //tokelau time\n  // tot: 13, //tonga time\n  // vut: 11, //vanuatu time\n  // wakt: 12, //wake island time\n\n  //i forget (sorry!)\n  // haec: 2, //heure avancée deurope centrale french-language name for cest\n  // syot: 3, //showa station time\n  // yekt: 5, //yekaterinburg time\n  // sct: 4, //seychelles time\n  // orat: 5, //oral time\n  // mawt: 5, //mawson station time\n  // hovt: 7, //khovd standard time\n  // hovst: 8, //khovd summer time\n  // davt: 7, //davis time\n  // chost: 9, //choibalsan summer time\n  // chot: 8, //choibalsan standard time\n  // wst: 8, //western standard time\n}\n\n//use each abbreviation as a key\nconst lookup = Object.keys(informal).reduce((h, k) => {\n  let arr = informal[k]\n  for (let i = 0; i < 5; i += 1) {\n    if (arr[i]) {\n      h[arr[i]] = k\n    }\n  }\n  return h\n}, {})\n\nmodule.exports = {\n  informal,\n  lookup\n}\n","//find the implicit iana code for this machine.\n//safely query the Intl object\n//based on - https://bitbucket.org/pellepim/jstimezonedetect/src\nconst fallbackTZ = 'utc' //\n\n//this Intl object is not supported often, yet\nconst safeIntl = () => {\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return null\n  }\n  let format = Intl.DateTimeFormat()\n  if (typeof format === 'undefined' || typeof format.resolvedOptions === 'undefined') {\n    return null\n  }\n  let timezone = format.resolvedOptions().timeZone\n  if (!timezone) {\n    return null\n  }\n  return timezone.toLowerCase()\n}\n\nconst guessTz = () => {\n  let timezone = safeIntl()\n  if (timezone === null) {\n    return fallbackTZ\n  }\n  return timezone\n}\n//do it once per computer\nmodule.exports = guessTz\n","const tzs = require('../../zonefile/unpack')\nconst informal = require('../../zonefile/informal').lookup\nconst guessTz = require('./guessTz')\nconst local = guessTz()\nconst isOffset = /(\\-?[0-9]+)h(rs)?/\n\n//add all the city names by themselves\nconst cities = Object.keys(tzs).reduce((h, k) => {\n  let city = k.split('/')[1] || ''\n  city = city.replace(/_/g, ' ')\n  h[city] = k\n  return h\n}, {})\n\n//try to match these against iana form\nconst normalize = tz => {\n  tz = tz.replace(/ time/g, '')\n  tz = tz.replace(/ (standard|daylight|summer)/g, '')\n  tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1')\n  tz = tz.replace(/\\b(africa|america|australia)n/g, '$1')\n  tz = tz.replace(/\\beuropean/g, 'europe')\n  tz = tz.replace(/\\islands/g, 'island')\n  return tz\n}\n\n// try our best to reconcile the timzone to this given string\nconst lookupTz = (str, zones) => {\n  if (!str) {\n    return local\n  }\n  let tz = str.trim()\n  let split = str.split('/')\n  //support long timezones like 'America/Argentina/Rio_Gallegos'\n  if (split.length > 2 && zones.hasOwnProperty(tz) === false) {\n    tz = split[0] + '/' + split[1]\n  }\n  tz = tz.toLowerCase()\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //lookup more loosely..\n  tz = normalize(tz)\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //try abbrevations and things\n  if (informal.hasOwnProperty(tz) === true) {\n    return informal[tz]\n  }\n  //try city-names\n  if (cities.hasOwnProperty(tz) === true) {\n    return cities[tz]\n  }\n  // //try to parse '-5h'\n  let m = tz.match(isOffset)\n  if (m !== null) {\n    let num = Number(m[1])\n    num = num * -1 //it's opposite!\n    num = (num > 0 ? '+' : '') + num\n    let gmt = 'etc/gmt' + num\n    if (zones.hasOwnProperty(gmt)) {\n      return gmt\n    }\n  }\n  console.warn(\"Cannot find timezone named: '\" + str + \"'\")\n  return local\n}\nmodule.exports = lookupTz\n","let o = {\n  millisecond: 1\n}\no.second = 1000\no.minute = 60000\no.hour = 3.6e6 // dst is supported post-hoc\no.day = 8.64e7 //\no.date = o.day\no.month = 8.64e7 * 29.5 //(average)\no.week = 6.048e8\no.year = 3.154e10 // leap-years are supported post-hoc\n//add plurals\nObject.keys(o).forEach(k => {\n  o[k + 's'] = o[k]\n})\nmodule.exports = o\n","const ms = require('../../data/milliseconds')\n\n//basically, step-forward/backward until js Date object says we're there.\nconst walk = (s, n, fn, unit, previous) => {\n  let current = s.d[fn]()\n  if (current === n) {\n    return //already there\n  }\n  let startUnit = previous === null ? null : s.d[previous]()\n  let original = s.epoch\n  //try to get it as close as we can\n  let diff = n - current\n  s.epoch += ms[unit] * diff\n\n  //DST edge-case: if we are going many days, be a little conservative\n  if (unit === 'day' && Math.abs(diff) > 28) {\n    //but don't push it over a month\n    if (n < 28) {\n      s.epoch += ms.hour\n    }\n  }\n  //repair it if we've gone too far or something\n  //(go by half-steps, just in case)\n  const halfStep = ms[unit] / 2\n  while (s.d[fn]() < n) {\n    s.epoch += halfStep\n  }\n  while (s.d[fn]() > n) {\n    s.epoch -= halfStep\n  }\n  //oops, did we change previous unit? revert it.\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original\n    // i mean, but make it close...\n    s.epoch += ms[unit] * diff * 0.97 // i guess?\n  }\n}\n//find the desired date by a increment/check while loop\nconst units = {\n  year: {\n    valid: n => n > -4000 && n < 4000,\n    walkTo: (s, n) => walk(s, n, 'getFullYear', 'year', null)\n  },\n  month: {\n    valid: n => n >= 0 && n <= 11,\n    walkTo: (s, n) => {\n      let d = s.d\n      let current = d.getMonth()\n      let original = s.epoch\n      let startUnit = d.getYear()\n      if (current === n) {\n        return\n      }\n      //try to get it as close as we can..\n      let diff = n - current\n      s.epoch += ms.day * (diff * 28) //special case\n      //oops, did we change the year? revert it.\n      if (startUnit !== s.d.getYear()) {\n        s.epoch = original\n      }\n      //incriment by day\n      while (s.d.getMonth() < n) {\n        s.epoch += ms.day\n      }\n      while (s.d.getMonth() > n) {\n        s.epoch -= ms.day\n      }\n    }\n  },\n  date: {\n    valid: n => n > 0 && n <= 31,\n    walkTo: (s, n) => walk(s, n, 'getDate', 'day', 'getMonth')\n  },\n  hour: {\n    valid: n => n >= 0 && n < 24,\n    walkTo: (s, n) => walk(s, n, 'getHours', 'hour', 'getDate')\n  },\n  minute: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => walk(s, n, 'getMinutes', 'minute', 'getHours')\n  },\n  second: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.seconds(n).epoch\n    }\n  },\n  millisecond: {\n    valid: n => n >= 0 && n < 1000,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.milliseconds(n).epoch\n    }\n  }\n}\n\nconst walkTo = (s, wants) => {\n  let keys = Object.keys(units)\n  let old = s.clone()\n  for (let i = 0; i < keys.length; i++) {\n    let k = keys[i]\n    let n = wants[k]\n    if (n === undefined) {\n      n = old[k]()\n    }\n    if (typeof n === 'string') {\n      n = parseInt(n, 10)\n    }\n    //make-sure it's valid\n    if (!units[k].valid(n)) {\n      s.epoch = null\n      if (s.silent === false) {\n        console.warn('invalid ' + k + ': ' + n)\n      }\n      return\n    }\n    // console.log(k, n)\n    units[k].walkTo(s, n)\n  }\n  return\n}\n\nmodule.exports = walkTo\n","let shortMonths = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sept',\n  'oct',\n  'nov',\n  'dec'\n]\nlet longMonths = [\n  'january',\n  'february',\n  'march',\n  'april',\n  'may',\n  'june',\n  'july',\n  'august',\n  'september',\n  'october',\n  'november',\n  'december'\n]\n\nfunction buildMapping() {\n  const obj = {\n    sep: 8 //support this format\n  }\n  for (let i = 0; i < shortMonths.length; i++) {\n    obj[shortMonths[i]] = i\n  }\n  for (let i = 0; i < longMonths.length; i++) {\n    obj[longMonths[i]] = i\n  }\n  return obj\n}\n\nmodule.exports = {\n  short: () => shortMonths,\n  long: () => longMonths,\n  mapping: () => buildMapping(),\n  set: i18n => {\n    shortMonths = i18n.short || shortMonths\n    longMonths = i18n.long || longMonths\n  }\n}\n","//pull-apart ISO offsets, like \"+0100\"\nconst parseOffset = (s, offset) => {\n  if (!offset) {\n    return s\n  }\n  //this is a fancy-move\n  if (offset === 'Z') {\n    offset = '+0000'\n  }\n\n  // according to ISO8601, tz could be hh:mm, hhmm or hh\n  // so need few more steps before the calculation.\n  let num = 0\n\n  // for (+-)hh:mm\n  if (/^[\\+-]?[0-9]{2}:[0-9]{2}$/.test(offset)) {\n    //support \"+01:00\"\n    if (/:00/.test(offset) === true) {\n      offset = offset.replace(/:00/, '')\n    }\n    //support \"+01:30\"\n    if (/:30/.test(offset) === true) {\n      offset = offset.replace(/:30/, '.5')\n    }\n  }\n\n  // for (+-)hhmm\n  if (/^[\\+-]?[0-9]{4}$/.test(offset)) {\n    offset = offset.replace(/30$/, '.5')\n  }\n\n  num = parseFloat(offset)\n\n  //divide by 100 or 10 - , \"+0100\", \"+01\"\n  if (Math.abs(num) > 100) {\n    num = num / 100\n  }\n  //okay, try to match it to a utc timezone\n  //remember - this is opposite! a -5 offset maps to Etc/GMT+5  ¯\\_(:/)_/¯\n  //https://askubuntu.com/questions/519550/why-is-the-8-timezone-called-gmt-8-in-the-filesystem\n  num *= -1\n\n  if (num >= 0) {\n    num = '+' + num\n  }\n  let tz = 'etc/gmt' + num\n  let zones = s.timezones\n\n  if (zones[tz]) {\n    // log a warning if we're over-writing a given timezone?\n    // console.log('changing timezone to: ' + tz)\n    s.tz = tz\n  }\n  return s\n}\nmodule.exports = parseOffset\n","const parseTime = (s, str = '') => {\n  str = str.replace(/^\\s+/, '').toLowerCase() //trim\n  //formal time formats - 04:30.23\n  let arr = str.match(/([0-9]{1,2}):([0-9]{1,2}):?([0-9]{1,2})?[:\\.]?([0-9]{1,4})?/)\n  if (arr !== null) {\n    //validate it a little\n    let h = Number(arr[1])\n    if (h < 0 || h > 24) {\n      return s.startOf('day')\n    }\n    let m = Number(arr[2]) //don't accept '5:3pm'\n    if (arr[2].length < 2 || m < 0 || m > 59) {\n      return s.startOf('day')\n    }\n    s = s.hour(h)\n    s = s.minute(m)\n    s = s.seconds(arr[3] || 0)\n    s = s.millisecond(arr[4] || 0)\n    //parse-out am/pm\n    let ampm = str.match(/[\\b0-9](am|pm)\\b/)\n    if (ampm !== null && ampm[1]) {\n      s = s.ampm(ampm[1])\n    }\n    return s\n  }\n  //try an informal form - 5pm (no minutes)\n  arr = str.match(/([0-9]+) ?(am|pm)/)\n  if (arr !== null && arr[1]) {\n    let h = Number(arr[1])\n    //validate it a little..\n    if (h > 12 || h < 1) {\n      return s.startOf('day')\n    }\n    s = s.hour(arr[1] || 0)\n    s = s.ampm(arr[2])\n    s = s.startOf('hour')\n    return s\n  }\n  //no time info found, use start-of-day\n  s = s.startOf('day')\n  return s\n}\nmodule.exports = parseTime\n","const monthLengths = [\n  31, // January - 31 days\n  28, // February - 28 days in a common year and 29 days in leap years\n  31, // March - 31 days\n  30, // April - 30 days\n  31, // May - 31 days\n  30, // June - 30 days\n  31, // July - 31 days\n  31, // August - 31 days\n  30, // September - 30 days\n  31, // October - 31 days\n  30, // November - 30 days\n  31 // December - 31 days\n]\nmodule.exports = monthLengths\n","const monthLengths = require('../data/monthLengths')\nconst isLeapYear = require('../fns').isLeapYear\n\n//given a month, return whether day number exists in it\nconst hasDate = obj => {\n  //invalid values\n  if (monthLengths.hasOwnProperty(obj.month) !== true) {\n    return false\n  }\n  //support leap-year in february\n  if (obj.month === 1) {\n    if (isLeapYear(obj.year) && obj.date <= 29) {\n      return true\n    } else {\n      return obj.date <= 28\n    }\n  }\n  //is this date too-big for this month?\n  let max = monthLengths[obj.month] || 0\n  if (obj.date <= max) {\n    return true\n  }\n  return false\n}\nmodule.exports = hasDate\n","const walkTo = require('../methods/set/walk')\nconst months = require('../data/months').mapping()\nconst parseOffset = require('./parseOffset')\nconst parseTime = require('./parseTime')\nconst hasDate = require('./hasDate')\nconst fns = require('../fns')\n\nconst parseYear = (str = '') => {\n  //support '18 -> 2018\n  // str = str.replace(/^'([0-9]{2})/, '20$1')\n  // str = str.replace('([0-9]+) ?b\\.?c\\.?$', '-$1')\n  let year = parseInt(str.trim(), 10)\n  year = year || new Date().getFullYear()\n  return year\n}\n\nconst strFmt = [\n  //iso-this 1998-05-30T22:00:00:000Z, iso-that 2017-04-03T08:00:00-0700\n  {\n    reg: /^(\\-?0?0?[0-9]{3,4})-([0-9]{1,2})-([0-9]{1,2})[T| ]([0-9.:]+)(Z|[0-9\\-\\+:]+)?$/,\n    parse: (s, arr, givenTz, options) => {\n      let month = parseInt(arr[2], 10) - 1\n      let obj = {\n        year: arr[1],\n        month,\n        date: arr[3]\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      parseOffset(s, arr[5], givenTz, options)\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n  //iso \"2015-03-25\" or \"2015/03/25\" //0-based-months!\n  {\n    reg: /^([0-9]{4})[\\-\\/]([0-9]{1,2})[\\-\\/]([0-9]{1,2})$/,\n    parse: (s, arr) => {\n      let obj = {\n        year: arr[1],\n        month: parseInt(arr[2], 10) - 1,\n        date: parseInt(arr[3], 10)\n      }\n      if (obj.month >= 12) {\n        //support yyyy/dd/mm (weird, but ok)\n        obj.date = parseInt(arr[2], 10)\n        obj.month = parseInt(arr[3], 10) - 1\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s)\n      return s\n    }\n  },\n  //short - uk \"03/25/2015\"  //0-based-months!\n  {\n    reg: /^([0-9]{1,2})[\\-\\/]([0-9]{1,2})[\\-\\/]?([0-9]{4})?$/,\n    parse: (s, arr) => {\n      let month = parseInt(arr[1], 10) - 1\n      let date = parseInt(arr[2], 10)\n      if (month >= 12) {\n        //support yyyy/dd/mm (weird, but ok)\n        month = parseInt(arr[2], 10) - 1\n        date = parseInt(arr[1], 10)\n      }\n      let year = arr[3] || new Date().getFullYear()\n      let obj = {\n        year,\n        month,\n        date\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s)\n      return s\n    }\n  },\n  //Long \"Mar 25 2015\"\n  //February 22, 2017 15:30:00\n  {\n    reg: /^([a-z]+) ([0-9]{1,2}(?:st|nd|rd|th)?),?( [0-9]{4})?( ([0-9:]+( ?am| ?pm)?))?$/i,\n    parse: (s, arr) => {\n      let month = months[arr[1].toLowerCase()]\n      let year = parseYear(arr[3])\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[2] || '')\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n  //February 2017 (implied date)\n  {\n    reg: /^([a-z]+) ([0-9]{4})$/i,\n    parse: (s, arr) => {\n      let month = months[arr[1].toLowerCase()]\n      let year = parseYear(arr[2])\n      let obj = {\n        year,\n        month,\n        date: 1\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n  //Long \"25 Mar 2015\"\n  {\n    reg: /^([0-9]{1,2}(?:st|nd|rd|th)?) ([a-z]+),?( [0-9]{4})?$/i,\n    parse: (s, arr) => {\n      let month = months[arr[2].toLowerCase()]\n      let year = parseYear(arr[3])\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[1])\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s)\n      return s\n    }\n  },\n  {\n    // '1992'\n    reg: /^[0-9]{4}$/i,\n    parse: (s, arr) => {\n      let year = parseYear(arr[0])\n      let d = new Date()\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s)\n      return s\n    }\n  },\n  {\n    // '200bc'\n    reg: /^[0-9,]+ ?b\\.?c\\.?$/i,\n    parse: (s, arr) => {\n      let str = arr[0] || ''\n      //make negative-year\n      str = str.replace(/^([0-9,]+) ?b\\.?c\\.?$/i, '-$1')\n      //remove commas\n      str = str.replace(/,/g, '')\n      let year = parseInt(str.trim(), 10)\n      let d = new Date()\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s)\n      return s\n    }\n  }\n]\n\nmodule.exports = strFmt\n","const dates = {\n  now: s => {\n    s.epoch = Date.now()\n    return s\n  },\n  tonight: s => {\n    s.epoch = Date.now()\n    s = s.hour(18)\n    return s\n  },\n  today: s => {\n    s.epoch = Date.now()\n    return s\n  },\n  tomorrow: s => {\n    s.epoch = Date.now()\n    s = s.add(1, 'day')\n    s = s.startOf('day')\n    return s\n  },\n  yesterday: s => {\n    s.epoch = Date.now()\n    s = s.subtract(1, 'day')\n    s = s.startOf('day')\n    return s\n  },\n  christmas: s => {\n    let year = new Date().getFullYear()\n    s = s.set([year, 11, 25, 18, 0, 0]) // Dec 25\n    return s\n  },\n  'new years': s => {\n    let year = new Date().getFullYear()\n    s = s.set([year, 11, 31, 18, 0, 0]) // Dec 31\n    return s\n  }\n}\ndates['new years eve'] = dates['new years']\nmodule.exports = dates\n","const strFmt = require('./strParse')\nconst fns = require('../fns')\nconst namedDates = require('./named-dates')\n//we have to actually parse these inputs ourselves\n//  -  can't use built-in js parser ;(\n//=========================================\n// ISO Date\t  \"2015-03-25\"\n// Short Date\t\"03/25/2015\" or \"2015/03/25\"\n// Long Date\t\"Mar 25 2015\" or \"25 Mar 2015\"\n// Full Date\t\"Wednesday March 25 2015\"\n//=========================================\n\n//-- also -\n// if the given epoch is really small, they've probably given seconds and not milliseconds\n// anything below this number is likely (but not necessarily) a mistaken input.\n// this may seem like an arbitrary number, but it's 'within jan 1970'\n// this is only really ambiguous until 2054 or so\nconst minimumEpoch = 2500000000\n\nconst defaults = {\n  year: new Date().getFullYear(),\n  month: 0,\n  date: 1\n}\n\n//support [2016, 03, 01] format\nconst handleArray = (s, arr) => {\n  let order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond']\n  for (let i = 0; i < order.length; i++) {\n    let num = arr[i] || defaults[order[i]] || 0\n    s = s[order[i]](num)\n  }\n  return s\n}\n//support {year:2016, month:3} format\nconst handleObject = (s, obj) => {\n  obj = Object.assign({}, defaults, obj)\n  let keys = Object.keys(obj)\n  for (let i = 0; i < keys.length; i++) {\n    let unit = keys[i]\n    //make sure we have this method\n    if (s[unit] === undefined || typeof s[unit] !== 'function') {\n      continue\n    }\n    //make sure the value is a number\n    if (obj[unit] === null || obj[unit] === undefined || obj[unit] === '') {\n      continue\n    }\n    let num = obj[unit] || defaults[unit] || 0\n    s = s[unit](num)\n  }\n  return s\n}\n\n//find the epoch from different input styles\nconst parseInput = (s, input, givenTz) => {\n  //if we've been given a epoch number, it's easy\n  if (typeof input === 'number') {\n    if (input > 0 && input < minimumEpoch && s.silent === false) {\n      console.warn('  - Warning: You are setting the date to January 1970.')\n      console.warn('       -   did input seconds instead of milliseconds?')\n    }\n    s.epoch = input\n    return s\n  }\n  //set tmp time\n  s.epoch = Date.now()\n  if (input === null || input === undefined) {\n    return s //k, we're good.\n  }\n  //support input of Date() object\n  if (fns.isDate(input) === true) {\n    s.epoch = input.getTime()\n    return s\n  }\n  //support [2016, 03, 01] format\n  if (fns.isArray(input) === true) {\n    s = handleArray(s, input)\n    return s\n  }\n  //support {year:2016, month:3} format\n  if (fns.isObject(input) === true) {\n    //support spacetime object as input\n    if (input.epoch) {\n      s.epoch = input.epoch\n      s.tz = input.tz\n      return s\n    }\n    s = handleObject(s, input)\n    return s\n  }\n  //input as a string..\n  if (typeof input !== 'string') {\n    return s\n  }\n  //little cleanup..\n  input = input.replace(/\\b(mon|tues|wed|wednes|thu|thurs|fri|sat|satur|sun)(day)?\\b/i, '')\n  input = input.replace(/,/g, '')\n  input = input.replace(/ +/g, ' ').trim()\n  //try some known-words, like 'now'\n  if (namedDates.hasOwnProperty(input) === true) {\n    s = namedDates[input](s)\n    return s\n  }\n  //try each text-parse template, use the first good result\n  for (let i = 0; i < strFmt.length; i++) {\n    let m = input.match(strFmt[i].reg)\n    if (m) {\n      s = strFmt[i].parse(s, m, givenTz)\n      return s\n    }\n  }\n  if (s.silent === false) {\n    console.warn(\"Warning: couldn't parse date-string: '\" + input + \"'\")\n  }\n  s.epoch = null\n  return s\n}\nmodule.exports = parseInput\n","let shortDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']\nlet longDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\n\nmodule.exports = {\n  short: () => shortDays,\n  long: () => longDays,\n  set: i18n => {\n    shortDays = i18n.short || shortDays\n    longDays = i18n.long || longDays\n  }\n}\n","const fns = require('../../fns')\n\n// create the timezone offset part of an iso timestamp\n// it's kind of nuts how involved this is\n// \"+01:00\", \"+0100\", or simply \"+01\"\nconst isoOffset = s => {\n  let offset = s.timezone().current.offset\n  const isNegative = offset < 0\n  let minute = '00'\n  //handle 5.5 → '5:30'\n  if (Math.abs(offset % 1) === 0.5) {\n    minute = '30'\n    if (offset >= 0) {\n      offset = Math.floor(offset)\n    } else {\n      offset = Math.ceil(offset)\n    }\n  }\n  if (isNegative) {\n    //handle negative sign\n    offset *= -1\n    offset = fns.zeroPad(offset, 2)\n    offset = '-' + offset\n  } else {\n    offset = fns.zeroPad(offset, 2)\n    offset = '+' + offset\n  }\n  offset = offset + ':' + minute\n  //'Z' means 00\n  if (offset === '+00:00') {\n    offset = 'Z'\n  }\n  return offset\n}\n\nmodule.exports = isoOffset\n","const fns = require('../../fns')\nconst months = require('../../data/months')\nconst days = require('../../data/days')\nconst isoOffset = require('./_offset')\n\nconst format = {\n  day: s => fns.titleCase(s.dayName()),\n  'day-short': s => fns.titleCase(days.short()[s.day()]),\n  'day-number': s => s.day(),\n  'day-ordinal': s => fns.ordinal(s.day()),\n  'day-pad': s => fns.zeroPad(s.day()),\n\n  date: s => s.date(),\n  'date-ordinal': s => fns.ordinal(s.date()),\n  'date-pad': s => fns.zeroPad(s.date()),\n\n  month: s => fns.titleCase(s.monthName()),\n  'month-short': s => fns.titleCase(months.short()[s.month()]),\n  'month-number': s => s.month(),\n  'month-ordinal': s => fns.ordinal(s.month()),\n  'month-pad': s => fns.zeroPad(s.month()),\n  'iso-month': s => fns.zeroPad(s.month() + 1), //1-based months\n\n  year: s => {\n    let year = s.year()\n    if (year > 0) {\n      return year\n    }\n    year = Math.abs(year)\n    return year + ' BC'\n  },\n  'year-short': s => {\n    let year = s.year()\n    if (year > 0) {\n      return `'${String(s.year()).substr(2, 4)}`\n    }\n    year = Math.abs(year)\n    return year + ' BC'\n  },\n  'iso-year': s => {\n    let year = s.year()\n    let isNegative = year < 0\n    let str = fns.zeroPad(Math.abs(year), 4) //0-padded\n    if (isNegative) {\n      //negative years are for some reason 6-digits ('-00008')\n      str = fns.zeroPad(str, 6)\n      str = '-' + str\n    }\n    return str\n  },\n\n  time: s => s.time(),\n  'time-24': s => `${s.hour24()}:${fns.zeroPad(s.minute())}`,\n  hour: s => s.hour12(),\n  'hour-pad': s => fns.zeroPad(s.hour12()),\n  'hour-24': s => s.hour24(),\n  'hour-24-pad': s => fns.zeroPad(s.hour24()),\n\n  minute: s => s.minute(),\n  'minute-pad': s => fns.zeroPad(s.minute()),\n  second: s => s.second(),\n  'second-pad': s => fns.zeroPad(s.second()),\n\n  ampm: s => s.ampm(),\n  quarter: s => 'Q' + s.quarter(),\n  season: s => s.season(),\n  era: s => s.era(),\n  timezone: s => s.timezone().name,\n  offset: s => isoOffset(s),\n\n  numeric: s => `${s.year()}/${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, // yyyy/mm/dd\n  'numeric-us': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}/${s.year()}`, // mm/dd/yyyy\n  'numeric-uk': s => `${fns.zeroPad(s.date())}/${fns.zeroPad(s.month() + 1)}/${s.year()}`, //dd/mm/yyyy\n  'mm/dd': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, //mm/dd\n\n  // ... https://en.wikipedia.org/wiki/ISO_8601 ;(((\n  iso: s => {\n    let year = s.format('iso-year')\n    let month = fns.zeroPad(s.month() + 1) //1-based months\n    let date = fns.zeroPad(s.date())\n    let hour = fns.zeroPad(s.h24())\n    let minute = fns.zeroPad(s.minute())\n    let second = fns.zeroPad(s.second())\n    let ms = fns.zeroPad(s.millisecond(), 3)\n    let offset = isoOffset(s)\n    return `${year}-${month}-${date}T${hour}:${minute}:${second}.${ms}${offset}` //2018-03-09T08:50:00.000-05:00\n  },\n  'iso-short': s => {\n    let month = fns.zeroPad(s.month() + 1) //1-based months\n    let date = fns.zeroPad(s.date())\n    return `${s.year()}-${month}-${date}` //2017-02-15\n  },\n  'iso-utc': s => {\n    return new Date(s.epoch).toISOString() //2017-03-08T19:45:28.367Z\n  },\n\n  //i made these up\n  nice: s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.time()}`,\n  'nice-year': s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.year()}`,\n  'nice-day': s =>\n    `${days.short()[s.day()]} ${fns.titleCase(months.short()[s.month()])} ${fns.ordinal(s.date())}`,\n  'nice-full': s =>\n    `${s.dayName()} ${fns.titleCase(s.monthName())} ${fns.ordinal(s.date())}, ${s.time()}`\n}\n//aliases\nconst aliases = {\n  'day-name': 'day',\n  'month-name': 'month',\n  'iso 8601': 'iso',\n  'time-h24': 'time-24',\n  'time-12': 'time',\n  'time-h12': 'time',\n  tz: 'timezone',\n  'day-num': 'day-number',\n  'month-num': 'month-number',\n  'month-iso': 'iso-month',\n  'year-iso': 'iso-year',\n  'nice-short': 'nice',\n  mdy: 'numeric-us',\n  dmy: 'numeric-uk',\n  ymd: 'numeric',\n  'yyyy/mm/dd': 'numeric',\n  'mm/dd/yyyy': 'numeric-us',\n  'dd/mm/yyyy': 'numeric-us',\n  'little-endian': 'numeric-uk',\n  'big-endian': 'numeric',\n  'day-nice': 'nice-day'\n}\nObject.keys(aliases).forEach(k => (format[k] = format[aliases[k]]))\n\nconst printFormat = (s, str = '') => {\n  //don't print anything if it's an invalid date\n  if (s.isValid() !== true) {\n    return ''\n  }\n  //support .format('month')\n  if (format.hasOwnProperty(str)) {\n    let out = String(format[str](s) || '')\n    if (str !== 'ampm') {\n      out = fns.titleCase(out)\n    }\n    return out\n  }\n  //support '{hour}:{minute}' notation\n  if (str.indexOf('{') !== -1) {\n    let sections = /\\{(.+?)\\}/g\n    str = str.replace(sections, (_, fmt) => {\n      fmt = fmt.toLowerCase().trim()\n      if (format.hasOwnProperty(fmt)) {\n        return String(format[fmt](s) || '')\n      }\n      return ''\n    })\n    return str\n  }\n\n  return s.format('iso-short')\n}\nmodule.exports = printFormat\n","const pad = require('../../fns').zeroPad\nconst formatTimezone = require('../../fns').formatTimezone\n//parse this insane unix-time-templating thing, from the 19th century\n//http://unicode.org/reports/tr35/tr35-25.html#Date_Format_Patterns\n\n//time-symbols we support\nconst mapping = {\n  G: s => s.era(),\n  GG: s => s.era(),\n  GGG: s => s.era(),\n  GGGG: s => (s.era() === 'AD' ? 'Anno Domini' : 'Before Christ'),\n  //year\n  y: s => s.year(),\n  yy: s => {\n    //last two chars\n    return parseInt(String(s.year()).substr(2, 4), 10)\n  },\n  yyy: s => s.year(),\n  yyyy: s => s.year(),\n  yyyyy: s => '0' + s.year(),\n  // u: (s) => {},//extended non-gregorian years\n\n  //quarter\n  Q: s => s.quarter(),\n  QQ: s => s.quarter(),\n  QQQ: s => s.quarter(),\n  QQQQ: s => s.quarter(),\n\n  //month\n  M: s => s.month() + 1,\n  MM: s => pad(s.month() + 1),\n  MMM: s => s.format('month-short'),\n  MMMM: s => s.format('month'),\n\n  //week\n  w: s => s.week(),\n  ww: s => pad(s.week()),\n  //week of month\n  // W: (s) => s.week(),\n\n  //date of month\n  d: s => s.date(),\n  dd: s => pad(s.date()),\n  //date of year\n  D: s => s.dayOfYear(),\n  DD: s => pad(s.dayOfYear()),\n  DDD: s => pad(s.dayOfYear(), 3),\n\n  // F: (s) => {},//date of week in month\n  // g: (s) => {},//modified julian day\n\n  //day\n  E: s => s.format('day-short'),\n  EE: s => s.format('day-short'),\n  EEE: s => s.format('day-short'),\n  EEEE: s => s.format('day'),\n  EEEEE: s => s.format('day')[0],\n  e: s => s.day(),\n  ee: s => s.day(),\n  eee: s => s.format('day-short'),\n  eeee: s => s.format('day'),\n  eeeee: s => s.format('day')[0],\n\n  //am/pm\n  a: s => s.ampm().toUpperCase(),\n  aa: s => s.ampm().toUpperCase(),\n  aaa: s => s.ampm().toUpperCase(),\n  aaaa: s => s.ampm().toUpperCase(),\n\n  //hour\n  h: s => s.h12(),\n  hh: s => pad(s.h12()),\n  H: s => s.hour(),\n  HH: s => pad(s.hour()),\n  // j: (s) => {},//weird hour format\n\n  m: s => s.minute(),\n  mm: s => pad(s.minute()),\n  s: s => s.second(),\n  ss: s => pad(s.second()),\n  //milliseconds in the day\n  A: s => s.epoch - s.startOf('day').epoch,\n  //timezone\n  z: s => s.timezone().name,\n  zz: s => s.timezone().name,\n  zzz: s => s.timezone().name,\n  zzzz: s => s.timezone().name,\n  Z: s => formatTimezone(s.timezone().current.offset),\n  ZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZZ: s => formatTimezone(s.timezone().current.offset, ':')\n}\n\nconst addAlias = (char, to, n) => {\n  let name = char\n  let toName = to\n  for (let i = 0; i < n; i += 1) {\n    mapping[name] = mapping[toName]\n    name += char\n    toName += to\n  }\n}\naddAlias('q', 'Q', 4)\naddAlias('L', 'M', 4)\naddAlias('Y', 'y', 4)\naddAlias('c', 'e', 4)\naddAlias('k', 'H', 2)\naddAlias('K', 'h', 2)\naddAlias('S', 's', 2)\naddAlias('v', 'z', 4)\naddAlias('V', 'Z', 4)\n\nconst unixFmt = (s, str) => {\n  let chars = str.split('')\n  //combine consecutive chars, like 'yyyy' as one.\n  let arr = [chars[0]]\n  let quoteOn = false\n  for (let i = 1; i < chars.length; i += 1) {\n    //support quoted substrings\n    if (chars[i] === `'`) {\n      quoteOn = !quoteOn\n      //support '', meaning one tick\n      if (quoteOn === true && chars[i + 1] && chars[i + 1] === \"'\") {\n        quoteOn = true\n      } else {\n        continue\n      }\n    }\n    //merge it with the last one\n    if (quoteOn === true || chars[i] === arr[arr.length - 1][0]) {\n      arr[arr.length - 1] += chars[i]\n    } else {\n      arr.push(chars[i])\n    }\n  }\n  return arr.reduce((txt, c) => {\n    if (mapping[c] !== undefined) {\n      txt += mapping[c](s) || ''\n    } else {\n      txt += c\n    }\n    return txt\n  }, '')\n}\nmodule.exports = unixFmt\n","const fns = require('../fns')\nconst units = ['year', 'season', 'quarter', 'month', 'week', 'day', 'quarterHour', 'hour', 'minute']\n\nconst doUnit = function(s, k) {\n  let start = s.clone().startOf(k)\n  let end = s.clone().endOf(k)\n  let duration = end.epoch - start.epoch\n  let percent = (s.epoch - start.epoch) / duration\n  return parseFloat(percent.toFixed(2))\n}\n\n//how far it is along, from 0-1\nconst progress = (s, unit) => {\n  if (unit) {\n    unit = fns.normalize(unit)\n    return doUnit(s, unit)\n  }\n  let obj = {}\n  units.forEach(k => {\n    obj[k] = doUnit(s, k)\n  })\n  return obj\n}\n\nmodule.exports = progress\n","const fns = require('../fns')\n\n//round to either current, or +1 of this unit\nconst nearest = (s, unit) => {\n  //how far have we gone?\n  let prog = s.progress()\n  unit = fns.normalize(unit)\n  //fix camel-case for this one\n  if (unit === 'quarterhour') {\n    unit = 'quarterHour'\n  }\n  if (prog[unit] !== undefined) {\n    // go forward one?\n    if (prog[unit] > 0.5) {\n      s = s.add(1, unit)\n    }\n    // go to start\n    s = s.startOf(unit)\n  } else if (s.silent === false) {\n    console.warn(\"no known unit '\" + unit + \"'\")\n  }\n  return s\n}\nmodule.exports = nearest\n","//increment until dates are the same\nconst climb = (a, b, unit) => {\n  let i = 0\n  a = a.clone()\n  while (a.isBefore(b)) {\n    //do proper, expensive increment to catch all-the-tricks\n    a = a.add(1, unit)\n    i += 1\n  }\n  //oops, we went too-far..\n  if (a.isAfter(b, unit)) {\n    i -= 1\n  }\n  return i\n}\n\n// do a thurough +=1 on the unit, until they match\n// for speed-reasons, only used on day, month, week.\nconst diffOne = (a, b, unit) => {\n  if (a.isBefore(b)) {\n    return climb(a, b, unit)\n  } else {\n    return climb(b, a, unit) * -1 //reverse it\n  }\n}\n\nmodule.exports = diffOne\n","const diffOne = require('./one')\n\n// don't do anything too fancy here.\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\nconst fastYear = (a, b) => {\n  let years = b.year() - a.year()\n  // should we decrement it by 1?\n  a = a.year(b.year())\n  if (a.isAfter(b)) {\n    years -= 1\n  }\n  return years\n}\n\n// use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\nconst diff = function(a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  let msDiff = b.epoch - a.epoch\n  let obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  }\n  obj.minutes = parseInt(obj.seconds / 60, 10)\n  obj.hours = parseInt(obj.minutes / 60, 10)\n\n  //do the year\n  let tmp = a.clone()\n  obj.years = fastYear(tmp, b)\n  tmp = a.add(obj.years, 'year')\n\n  //there's always 12 months in a year...\n  obj.months = obj.years * 12\n  tmp = a.add(obj.months, 'month')\n  obj.months += diffOne(tmp, b, 'month')\n\n  // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n  obj.weeks = obj.years * 52\n  tmp = a.add(obj.weeks, 'week')\n  obj.weeks += diffOne(tmp, b, 'week')\n\n  // there's always atleast 7 days in a week\n  obj.days = obj.weeks * 7\n  tmp = a.add(obj.days, 'day')\n  obj.days += diffOne(tmp, b, 'day')\n\n  return obj\n}\nmodule.exports = diff\n","const fns = require('../../fns')\nconst waterfall = require('./waterfall')\n\nconst reverseDiff = function(obj) {\n  Object.keys(obj).forEach(k => {\n    obj[k] *= -1\n  })\n  return obj\n}\n\n// this method counts a total # of each unit, between a, b.\n// '1 month' means 28 days in february\n// '1 year' means 366 days in a leap year\nconst main = function(a, b, unit) {\n  b = fns.beADate(b, a)\n  //reverse values, if necessary\n  let reversed = false\n  if (a.isAfter(b)) {\n    let tmp = a\n    a = b\n    b = tmp\n    reversed = true\n  }\n  //compute them all (i know!)\n  let obj = waterfall(a, b)\n  if (reversed) {\n    obj = reverseDiff(obj)\n  }\n  //return just the requested unit\n  if (unit) {\n    //make sure it's plural-form\n    unit = fns.normalize(unit)\n    if (/s$/.test(unit) !== true) {\n      unit += 's'\n    }\n    if (unit === 'dates') {\n      unit = 'days'\n    }\n    return obj[unit]\n  }\n  return obj\n}\n\nmodule.exports = main\n","const fns = require('../fns')\n//by spencermountain + Shaun Grady\n\n//our conceptual 'break-points' for each unit\nconst qualifiers = {\n  months: {\n    almost: 10,\n    over: 4\n  },\n  days: {\n    almost: 25,\n    over: 10\n  },\n  hours: {\n    almost: 20,\n    over: 8\n  },\n  minutes: {\n    almost: 50,\n    over: 20\n  },\n  seconds: {\n    almost: 50,\n    over: 20\n  }\n}\n\n//get number of hours/minutes... between the two dates\nfunction getDiff(a, b) {\n  const isBefore = a.isBefore(b)\n  const later = isBefore ? b : a\n  let earlier = isBefore ? a : b\n  earlier = earlier.clone()\n  const diff = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  }\n  Object.keys(diff).forEach(unit => {\n    if (earlier.isSame(later, unit)) {\n      return\n    }\n    let max = earlier.diff(later, unit)\n    earlier = earlier.add(max, unit)\n    diff[unit] = max\n  })\n\n  //reverse it, if necessary\n  if (isBefore) {\n    Object.keys(diff).forEach(u => {\n      if (diff[u] !== 0) {\n        diff[u] *= -1\n      }\n    })\n  }\n  return diff\n}\n\n// Expects a plural unit arg\nfunction pluralize(value, unit) {\n  if (value === 1) {\n    unit = unit.slice(0, -1)\n  }\n  return value + ' ' + unit\n}\n\n//create the human-readable diff between the two dates\nconst since = (start, end) => {\n  end = fns.beADate(end, start)\n  const diff = getDiff(start, end)\n  const isNow = Object.keys(diff).every(u => !diff[u])\n  if (isNow === true) {\n    return {\n      diff,\n      rounded: 'now',\n      qualified: 'now',\n      precise: 'now'\n    }\n  }\n  let rounded\n  let qualified\n  let precise\n  let englishValues = []\n\n  //go through each value and create its text-representation\n  Object.keys(diff).forEach((unit, i, units) => {\n    const value = Math.abs(diff[unit])\n    if (value === 0) {\n      return\n    }\n    const englishValue = pluralize(value, unit)\n    englishValues.push(englishValue)\n    if (!rounded) {\n      rounded = qualified = englishValue\n      if (i > 4) {\n        return\n      }\n      //is it a 'almost' something, etc?\n      const nextUnit = units[i + 1]\n      const nextValue = Math.abs(diff[nextUnit])\n      if (nextValue > qualifiers[nextUnit].almost) {\n        rounded = pluralize(value + 1, unit)\n        qualified = 'almost ' + rounded\n      } else if (nextValue > qualifiers[nextUnit].over) qualified = 'over ' + englishValue\n    }\n  })\n  //make them into a string\n  precise = englishValues.splice(0, 2).join(', ')\n  //handle before/after logic\n  if (start.isAfter(end) === true) {\n    rounded += ' ago'\n    qualified += ' ago'\n    precise += ' ago'\n  } else {\n    rounded = 'in ' + rounded\n    qualified = 'in ' + qualified\n    precise = 'in ' + precise\n  }\n  return {\n    diff,\n    rounded,\n    qualified,\n    precise\n  }\n}\n\nmodule.exports = since\n","//https://www.timeanddate.com/calendar/aboutseasons.html\n// Spring - from March 1 to May 31;\n// Summer - from June 1 to August 31;\n// Fall (autumn) - from September 1 to November 30; and,\n// Winter - from December 1 to February 28 (February 29 in a leap year).\nmodule.exports = {\n  north: [\n    ['spring', 2, 1], //spring march 1\n    ['summer', 5, 1], //june 1\n    ['fall', 8, 1], //sept 1\n    ['autumn', 8, 1], //sept 1\n    ['winter', 11, 1] //dec 1\n  ],\n  south: [\n    ['fall', 2, 1], //march 1\n    ['autumn', 2, 1], //march 1\n    ['winter', 5, 1], //june 1\n    ['spring', 8, 1], //sept 1\n    ['summer', 11, 1] //dec 1\n  ]\n}\n","module.exports = [\n  null,\n  [0, 1], //jan 1\n  [3, 1], //apr 1\n  [6, 1], //july 1\n  [9, 1] //oct 1\n]\n","const seasons = require('../data/seasons')\nconst quarters = require('../data/quarters')\nconst walkTo = require('./set/walk')\nconst fns = require('../fns')\n\nconst units = {\n  minute: s => {\n    walkTo(s, {\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  quarterhour: s => {\n    let minute = s.minutes()\n    if (minute >= 45) {\n      s = s.minutes(45)\n    } else if (minute >= 30) {\n      s = s.minutes(30)\n    } else if (minute >= 15) {\n      s = s.minutes(15)\n    } else {\n      s = s.minutes(0)\n    }\n    walkTo(s, {\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  hour: s => {\n    walkTo(s, {\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  day: s => {\n    walkTo(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  week: s => {\n    let original = s.clone()\n    s = s.day(s._weekStart) //monday\n    if (s.isAfter(original)) {\n      s = s.subtract(1, 'week')\n    }\n    walkTo(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  month: s => {\n    walkTo(s, {\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  quarter: s => {\n    let q = s.quarter()\n    if (quarters[q]) {\n      walkTo(s, {\n        month: quarters[q][0],\n        date: quarters[q][1],\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      })\n    }\n    return s\n  },\n  season: s => {\n    let current = s.season()\n    let hem = 'north'\n    if (s.hemisphere() === 'South') {\n      hem = 'south'\n    }\n    for (let i = 0; i < seasons[hem].length; i++) {\n      if (seasons[hem][i][0] === current) {\n        //winter goes between years\n        let year = s.year()\n        if (current === 'winter' && s.month() < 3) {\n          year -= 1\n        }\n        walkTo(s, {\n          year,\n          month: seasons[hem][i][1],\n          date: seasons[hem][i][2],\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        })\n        return s\n      }\n    }\n    return s\n  },\n  year: s => {\n    walkTo(s, {\n      month: 0,\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  decade: s => {\n    s = s.startOf('year')\n    let year = s.year()\n    let decade = parseInt(year / 10, 10) * 10\n    s = s.year(decade)\n    return s\n  },\n  century: s => {\n    s = s.startOf('year')\n    let year = s.year()\n    let decade = parseInt(year / 100, 10) * 100\n    s = s.year(decade)\n    return s\n  }\n}\nunits.date = units.day\n\nconst startOf = (a, unit) => {\n  let s = a.clone()\n  unit = fns.normalize(unit)\n  if (units[unit]) {\n    return units[unit](s)\n  }\n  if (unit === 'summer' || unit === 'winter') {\n    s = s.season(unit)\n    return units.season(s)\n  }\n  return s\n}\n\n//piggy-backs off startOf\nconst endOf = (a, unit) => {\n  let s = a.clone()\n  unit = fns.normalize(unit)\n  if (units[unit]) {\n    s = units[unit](s)\n    s = s.add(1, unit)\n    s = s.subtract(1, 'milliseconds')\n    return s\n  }\n  return s\n}\nmodule.exports = {\n  startOf,\n  endOf\n}\n","const fns = require('../fns')\nconst days = require('../data/days')\n\n//is it 'wednesday'?\nconst isDay = function(unit) {\n  if (days.short().find(s => s === unit)) {\n    return true\n  }\n  if (days.long().find(s => s === unit)) {\n    return true\n  }\n  return false\n}\n\n// return a list of the weeks/months/days between a -> b\n// returns spacetime objects in the timezone of the input\nconst every = function(start, unit = '', end) {\n  if (!unit || !end) {\n    return []\n  }\n  //cleanup unit param\n  unit = fns.normalize(unit)\n  //cleanup to param\n  end = start.clone().set(end)\n  //swap them, if they're backwards\n  if (start.isAfter(end)) {\n    let tmp = start\n    start = end\n    end = tmp\n  }\n\n  //support 'every wednesday'\n  let d = start.clone()\n  if (isDay(unit)) {\n    d = d.next(unit)\n    unit = 'week'\n  } else {\n    d = d.next(unit)\n  }\n  //okay, actually start doing it\n  let result = []\n  while (d.isBefore(end)) {\n    result.push(d)\n    d = d.add(1, unit)\n  }\n  return result\n}\nmodule.exports = every\n","const informal = require('../../zonefile/informal').informal\n//these timezone abbreviations are used aggressively in other places\n//if tz doesn't have an abbreviation, and is in the same offset...\n//these are pretty subjective. i just made them up.\nconst greedy_north = {\n  '-8': 'america/anchorage',\n  '-7': 'america/los_angeles',\n  '-6': 'america/denver',\n  '-5': 'america/chicago',\n  '-4': 'america/new_york',\n  '-3': 'america/halifax',\n\n  '0': 'etc/gmt',\n  '1': 'europe/lisbon',\n  '2': 'europe/berlin',\n  // '3': 'europe/riga',\n  // '3': 'europe/moscow',\n  '8': 'asia/shanghai'\n}\nconst greedy_south = {\n  '-3': 'america/sao_paulo',\n  '0': 'etc/gmt',\n  '1': 'africa/lagos',\n  // '2': 'africa/khartoum',//central africa\n  '2': 'africa/johannesburg', //south africa\n  '3': 'africa/nairobi',\n  '10': 'australia/brisbane',\n  '12': 'pacific/auckland'\n}\n\nconst british = {\n  'europe/belfast': true,\n  'europe/dublin': true,\n  'europe/guernsey': true,\n  'europe/jersey': true\n}\n\nconst handleSpecial = (tz, offset) => {\n  if (british.hasOwnProperty(tz)) {\n    if (offset === '1') {\n      return 'BST'\n    }\n    return 'GMT'\n  }\n  return null\n}\n\nconst chooseAbbrev = (arr, obj) => {\n  if (arr[1] && obj.current.isDST === true) {\n    return arr[1].toUpperCase()\n  }\n  if (arr[0]) {\n    return arr[0].toUpperCase()\n  }\n  return null\n}\n//\nconst display = (tz, obj) => {\n  //try a straight-up match\n  if (informal.hasOwnProperty(tz)) {\n    let abbr = chooseAbbrev(informal[tz], obj)\n    if (abbr !== null) {\n      return abbr\n    }\n  }\n  let offset = String(obj.default_offset)\n  let special = handleSpecial(tz, offset)\n  if (special) {\n    return special\n  }\n\n  if (obj.hemisphere === 'North' && greedy_north.hasOwnProperty(offset)) {\n    let useTz = greedy_north[offset]\n    return chooseAbbrev(informal[useTz], obj) || ''\n  }\n  if (obj.hemisphere === 'South' && greedy_south.hasOwnProperty(offset)) {\n    let useTz = greedy_south[offset]\n    return chooseAbbrev(informal[useTz], obj) || ''\n  }\n  return ''\n}\nmodule.exports = display\n","const findTz = require('./find')\nconst inSummerTime = require('./summerTime')\nconst display = require('./display')\n\nconst parseDst = dst => {\n  if (!dst) {\n    return []\n  }\n  return dst.split('->')\n}\n\nconst titleCase = str => {\n  str = str[0].toUpperCase() + str.substr(1)\n  str = str.replace(/\\/gmt/, '/GMT')\n  str = str.replace(/[\\/_]([a-z])/gi, s => {\n    return s.toUpperCase()\n  })\n  return str\n}\n\n//get metadata about this timezone\nconst timezone = s => {\n  let zones = s.timezones\n  let tz = s.tz\n  if (zones.hasOwnProperty(tz) === false) {\n    tz = findTz(s.tz, zones)\n  }\n  if (tz === null) {\n    if (s.silent === false) {\n      console.warn(\"Warn: could not find given or local timezone - '\" + s.tz + \"'\")\n    }\n    return {\n      current: {\n        epochShift: 0\n      }\n    }\n  }\n  let found = zones[tz]\n  let result = {\n    name: titleCase(tz),\n    hasDst: Boolean(found.dst),\n    default_offset: found.offset,\n    //do north-hemisphere version as default (sorry!)\n    hemisphere: found.hem === 's' ? 'South' : 'North',\n    current: {}\n  }\n\n  if (result.hasDst) {\n    let arr = parseDst(found.dst)\n    result.change = {\n      start: arr[0],\n      back: arr[1]\n    }\n  }\n  //find the offsets for summer/winter times\n  //(these variable names are north-centric)\n  let summer = found.offset // (july)\n  let winter = summer // (january) assume it's the same for now\n  if (result.hasDst === true) {\n    if (result.hemisphere === 'North') {\n      winter = summer - 1\n    } else {\n      //southern hemisphere\n      winter = found.offset + 1\n    }\n  }\n\n  //find out which offset to use right now\n  //use 'summer' time july-time\n  if (result.hasDst === false) {\n    result.current.offset = summer\n    result.current.isDST = false\n  } else if (inSummerTime(s.epoch, result.change.start, result.change.back, summer) === true) {\n    result.current.offset = summer\n    result.current.isDST = result.hemisphere === 'North' //dst 'on' in winter in north\n  } else {\n    //use 'winter' january-time\n    result.current.offset = winter\n    result.current.isDST = result.hemisphere === 'South' //dst 'on' in summer in south\n  }\n  //try to find the best name for it..\n  result.display = display(tz, result, zones)\n  return result\n}\nmodule.exports = timezone\n","const format = require('./methods/format')\nconst unixFmt = require('./methods/format/unixFmt')\nconst progress = require('./methods/progress')\nconst nearest = require('./methods/nearest')\nconst diff = require('./methods/diff')\nconst since = require('./methods/since')\nconst ends = require('./methods/startOf')\nconst every = require('./methods/every')\nconst timezone = require('./timezone/index')\nconst findTz = require('./timezone/find')\nconst handleInput = require('./input')\nconst fns = require('./fns')\nconst days = require('./data/days')\n\n//the spacetime instance methods (also, the API)\nconst methods = {\n  set: function(input, tz) {\n    let s = this.clone()\n    s = handleInput(s, input)\n    if (tz) {\n      this.tz = findTz(tz)\n    }\n    return s\n  },\n  timezone: function() {\n    return timezone(this)\n  },\n  isDST: function() {\n    return timezone(this).current.isDST\n  },\n  hasDST: function() {\n    return timezone(this).hasDst\n  },\n  offset: function() {\n    return timezone(this).current.offset * 60\n  },\n  hemisphere: function() {\n    return timezone(this).hemisphere\n  },\n  format: function(fmt) {\n    return format(this, fmt)\n  },\n  unixFmt: function(fmt) {\n    return unixFmt(this, fmt)\n  },\n  startOf: function(unit) {\n    return ends.startOf(this, unit)\n  },\n  endOf: function(unit) {\n    return ends.endOf(this, unit)\n  },\n  leapYear: function() {\n    let year = this.year()\n    return fns.isLeapYear(year)\n  },\n  progress: function(unit) {\n    return progress(this, unit)\n  },\n  nearest: function(unit) {\n    return nearest(this, unit)\n  },\n  diff: function(d, unit) {\n    return diff(this, d, unit)\n  },\n  since: function(d) {\n    if (!d) {\n      d = this.clone().set()\n    }\n    return since(this, d)\n  },\n  next: function(unit) {\n    let s = this.add(1, unit)\n    return s.startOf(unit)\n  },\n  //the start of the previous year/week/century\n  last: function(unit) {\n    let s = this.subtract(1, unit)\n    return s.startOf(unit)\n  },\n  isValid: function() {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false\n    }\n    return !isNaN(this.d.getTime())\n  },\n  //travel to this timezone\n  goto: function(tz) {\n    let s = this.clone()\n    s.tz = findTz(tz, s.timezones) //science!\n    return s\n  },\n  //get each week/month/day between a -> b\n  every: function(unit, to) {\n    return every(this, unit, to)\n  },\n  isAwake: function() {\n    let hour = this.hour()\n    //10pm -> 8am\n    if (hour < 8 || hour > 22) {\n      return false\n    }\n    return true\n  },\n  isAsleep: function() {\n    return !this.isAwake()\n  },\n  //pretty-printing\n  log: function() {\n    console.log('')\n    console.log(format(this, 'nice-short'))\n    return this\n  },\n  logYear: function() {\n    console.log('')\n    console.log(format(this, 'full-short'))\n    return this\n  },\n  debug: function() {\n    let tz = this.timezone()\n    let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year()\n    date += '\\n     - ' + this.format('time')\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')')\n    return this\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function(d) {\n    d = this.clone().set(d)\n    return d.since(this)\n  },\n  fromNow: function() {\n    let d = this.clone().set(Date.now())\n    return d.since(this)\n  },\n  weekStart: function(input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input\n      return this\n    }\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim()\n      let num = days.short().indexOf(input)\n      if (num === -1) {\n        num = days.long().indexOf(input)\n      }\n      if (num === -1) {\n        num = 1 //go back to default\n      }\n      this._weekStart = num\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input)\n    }\n    return this\n  }\n}\n// aliases\nmethods.inDST = methods.isDST\nmethods.round = methods.nearest\nmethods.each = methods.every\nmodule.exports = methods\n","// javascript setX methods like setDate() can't be used because of the local bias\n//these methods wrap around them.\nconst ms = require('../../data/milliseconds')\nconst months = require('../../data/months')\nconst monthLength = require('../../data/monthLengths')\nconst walkTo = require('./walk')\n\nconst validate = n => {\n  //handle number as a string\n  if (typeof n === 'string') {\n    n = parseInt(n, 10)\n  }\n  return n\n}\n\nconst order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond']\n\n//reduce hostile micro-changes when moving dates by millisecond\nconst confirm = (s, tmp, unit) => {\n  let n = order.indexOf(unit)\n  let arr = order.slice(n, order.length)\n  for (let i = 0; i < arr.length; i++) {\n    let want = tmp[arr[i]]()\n    s[arr[i]](want)\n  }\n  return s\n}\n\nmodule.exports = {\n  milliseconds: (s, n) => {\n    n = validate(n)\n    let current = s.millisecond()\n    let diff = current - n //milliseconds to shift by\n    return s.epoch - diff\n  },\n\n  seconds: (s, n) => {\n    n = validate(n)\n    let diff = s.second() - n\n    let shift = diff * ms.second\n    return s.epoch - shift\n  },\n\n  minutes: (s, n) => {\n    n = validate(n)\n    let old = s.clone()\n    let diff = s.minute() - n\n    let shift = diff * ms.minute\n    s.epoch -= shift\n    confirm(s, old, 'second')\n    return s.epoch\n  },\n\n  hours: (s, n) => {\n    n = validate(n)\n    if (n >= 24) {\n      n = 24\n    } else if (n < 0) {\n      n = 0\n    }\n    let old = s.clone()\n    let diff = s.hour() - n\n    let shift = diff * ms.hour\n    s.epoch -= shift\n    walkTo(s, {\n      hour: n\n    })\n    confirm(s, old, 'minute')\n    return s.epoch\n  },\n\n  //support setting time by '4:25pm' - this isn't very-well developed..\n  time: (s, str) => {\n    let m = str.match(/([0-9]{1,2}):([0-9]{1,2})(am|pm)?/)\n    if (!m) {\n      //fallback to support just '2am'\n      m = str.match(/([0-9]{1,2})(am|pm)/)\n      if (!m) {\n        return s.epoch\n      }\n      m.splice(2, 0, '0') //add implicit 0 minutes\n    }\n    let h24 = false\n    let hour = parseInt(m[1], 10)\n    let minute = parseInt(m[2], 10)\n    if (hour > 12) {\n      h24 = true\n    }\n    //make the hour into proper 24h time\n    if (h24 === false) {\n      if (m[3] === 'am' && hour === 12) {\n        //12am is midnight\n        hour = 0\n      }\n      if (m[3] === 'pm' && hour < 12) {\n        //12pm is noon\n        hour += 12\n      }\n    }\n    s = s.hour(hour)\n    s = s.minute(minute)\n    s = s.second(0)\n    s = s.millisecond(0)\n    return s.epoch\n  },\n\n  date: (s, n) => {\n    n = validate(n)\n    //avoid setting february 31st\n    if (n > 28) {\n      const max = monthLength[s.month()]\n      if (n > max) {\n        n = max\n      }\n    }\n    //avoid setting < 0\n    if (n <= 0) {\n      n = 1\n    }\n    walkTo(s, {\n      date: n\n    })\n    return s.epoch\n  },\n\n  //this one's tricky\n  month: (s, n) => {\n    if (typeof n === 'string') {\n      n = months.mapping()[n.toLowerCase()]\n    }\n    n = validate(n)\n    //don't go past december\n    if (n >= 12) {\n      n = 11\n    }\n    if (n <= 0) {\n      n = 0\n    }\n\n    let date = s.date()\n    //there's no 30th of february, etc.\n    if (date > monthLength[n]) {\n      //make it as close as we can..\n      date = monthLength[n]\n    }\n    walkTo(s, {\n      month: n,\n      date\n    })\n    return s.epoch\n  },\n\n  year: (s, n) => {\n    n = validate(n)\n    walkTo(s, {\n      year: n\n    })\n    return s.epoch\n  },\n\n  dayOfYear: (s, n) => {\n    n = validate(n)\n    let old = s.clone()\n    n -= 1 //days are 1-based\n    if (n <= 0) {\n      n = 0\n    } else if (n >= 365) {\n      n = 364\n    }\n    s = s.startOf('year')\n    s = s.add(n, 'day')\n    confirm(s, old, 'hour')\n    return s.epoch\n  }\n}\n","const set = require('../set/set')\nconst fns = require('../../fns')\n\nconst methods = {\n  millisecond: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.milliseconds(s, num)\n      return s\n    }\n    return this.d.getMilliseconds()\n  },\n  second: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.seconds(s, num)\n      return s\n    }\n    return this.d.getSeconds()\n  },\n  minute: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.minutes(s, num)\n      return s\n    }\n    return this.d.getMinutes()\n  },\n  hour: function(num) {\n    let d = this.d\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.hours(s, num)\n      return s\n    }\n    return d.getHours()\n  },\n\n  //'3:30' is 3.5\n  hourFloat: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      let minute = num % 1\n      minute = minute * 60\n      let hour = parseInt(num, 10)\n      s.epoch = set.hours(s, hour)\n      s.epoch = set.minutes(s, minute)\n      return s\n    }\n    let d = this.d\n    let hour = d.getHours()\n    let minute = d.getMinutes()\n    minute = minute / 60\n    return hour + minute\n  },\n\n  // hour in 12h format\n  hour12: function(str) {\n    let d = this.d\n    if (str !== undefined) {\n      let s = this.clone()\n      str = '' + str\n      let m = str.match(/^([0-9]+)(am|pm)$/)\n      if (m) {\n        let hour = parseInt(m[1], 10)\n        if (m[2] === 'pm') {\n          hour += 12\n        }\n        s.epoch = set.hours(s, hour)\n      }\n      return s\n    }\n    //get the hour\n    let hour12 = d.getHours()\n    if (hour12 > 12) {\n      hour12 = hour12 - 12\n    }\n    if (hour12 === 0) {\n      hour12 = 12\n    }\n    return hour12\n  },\n\n  //some ambiguity here with 12/24h\n  time: function(str) {\n    if (str !== undefined) {\n      let s = this.clone()\n      s.epoch = set.time(s, str)\n      return s\n    }\n    return `${this.h12()}:${fns.zeroPad(this.minute())}${this.ampm()}`\n  },\n\n  // either 'am' or 'pm'\n  ampm: function(input) {\n    let which = 'am'\n    let hour = this.hour()\n    if (hour >= 12) {\n      which = 'pm'\n    }\n    if (typeof input !== 'string') {\n      return which\n    }\n    //okay, we're doing a setter\n    let s = this.clone()\n    input = input.toLowerCase().trim()\n    //ampm should never change the day\n    // - so use `.hour(n)` instead of `.minus(12,'hour')`\n    if (hour >= 12 && input === 'am') {\n      //noon is 12pm\n      hour -= 12\n      return s.hour(hour)\n    }\n    if (hour < 12 && input === 'pm') {\n      hour += 12\n      return s.hour(hour)\n    }\n    return s\n  },\n\n  //some hard-coded times of day, like 'noon'\n  dayTime: function(str) {\n    if (str !== undefined) {\n      const times = {\n        morning: '7:00am',\n        breakfast: '7:00am',\n        noon: '12:00am',\n        lunch: '12:00pm',\n        afternoon: '2:00pm',\n        evening: '6:00pm',\n        dinner: '6:00pm',\n        night: '11:00pm',\n        midnight: '23:59pm'\n      }\n      let s = this.clone()\n      str = str || ''\n      str = str.toLowerCase()\n      if (times.hasOwnProperty(str) === true) {\n        s = s.time(times[str])\n      }\n      return s\n    }\n    let h = this.hour()\n    if (h < 6) {\n      return 'night'\n    }\n    if (h < 12) {\n      //until noon\n      return 'morning'\n    }\n    if (h < 17) {\n      //until 5pm\n      return 'afternoon'\n    }\n    if (h < 22) {\n      //until 10pm\n      return 'evening'\n    }\n    return 'night'\n  },\n\n  //parse a proper iso string\n  iso: function(num) {\n    if (num !== undefined) {\n      return this.set(num)\n    }\n    return this.format('iso')\n  }\n}\nmodule.exports = methods\n","const set = require('../set/set')\nconst days = require('../../data/days')\nconst walkTo = require('../set/walk')\n\nconst clearMinutes = s => {\n  s = s.minute(0)\n  s = s.second(0)\n  s = s.millisecond(1)\n  return s\n}\n\nconst methods = {\n  // # day in the month\n  date: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.date(s, num)\n      return s\n    }\n    return this.d.getDate()\n  },\n\n  //like 'wednesday' (hard!)\n  day: function(input) {\n    if (input === undefined) {\n      return this.d.getDay()\n    }\n    let original = this.clone()\n    let want = input\n    // accept 'wednesday'\n    if (typeof input === 'string') {\n      input = input.toLowerCase()\n      want = days.short().indexOf(input)\n      if (want === -1) {\n        want = days.long().indexOf(input)\n      }\n    }\n    //move approx\n    let day = this.d.getDay()\n    let diff = day - want\n    let s = this.subtract(diff * 24, 'hours')\n    //tighten it back up\n    walkTo(s, {\n      hour: original.hour(),\n      minute: original.minute(),\n      second: original.second()\n    })\n    return s\n  },\n\n  //these are helpful name-wrappers\n  dayName: function(input) {\n    if (input === undefined) {\n      return days.long()[this.day()]\n    }\n    let s = this.clone()\n    s = s.day(input)\n    return s\n  },\n\n  //since the start of the year\n  week: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s = s.month(0)\n      s = s.date(1)\n      s = s.day('monday')\n      s = clearMinutes(s)\n      //don't go into last-year\n      if (s.monthName() === 'december') {\n        s = s.add(1, 'week')\n      }\n      num -= 1 //1-based\n      s = s.add(num, 'weeks')\n      return s\n    }\n    //find-out which week it is\n    let tmp = this.clone()\n    tmp = tmp.month(0)\n    tmp = tmp.date(1)\n    tmp = clearMinutes(tmp)\n    tmp = tmp.day('monday')\n    //don't go into last-year\n    if (tmp.monthName() === 'december') {\n      tmp = tmp.add(1, 'week')\n    }\n    const thisOne = this.epoch\n    //if the week technically hasn't started yet\n    if (tmp.epoch > thisOne) {\n      return 1\n    }\n    for (let i = 0; i < 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i\n      }\n      tmp = tmp.add(1, 'week')\n    }\n    return 52\n  },\n\n  //either name or number\n  month: function(input) {\n    if (input !== undefined) {\n      let s = this.clone()\n      s.epoch = set.month(s, input)\n      return s\n    }\n    return this.d.getMonth()\n  }\n}\nmodule.exports = methods\n","const set = require('../set/set')\nconst months = require('../../data/months')\nconst quarters = require('../../data/quarters')\nconst seasons = require('../../data/seasons')\n\nconst methods = {\n  // day 0-366\n  dayOfYear: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.dayOfYear(s, num)\n      return s\n    }\n    //days since newyears - jan 1st is 1, jan 2nd is 2...\n    let sum = 0\n    let month = this.d.getMonth()\n    let tmp\n    //count the num days in each month\n    for (let i = 1; i <= month; i++) {\n      tmp = new Date()\n      tmp.setDate(1)\n      tmp.setYear(this.d.getFullYear()) //the year matters, because leap-years\n      tmp.setHours(1)\n      tmp.setMinutes(1)\n      tmp.setMonth(i)\n      tmp.setHours(-2) //the last day of the month\n      sum += tmp.getDate()\n    }\n    return sum + this.d.getDate()\n  },\n\n  //'january'\n  monthName: function(input) {\n    if (input === undefined) {\n      return months.long()[this.month()]\n    }\n    let s = this.clone()\n    s = s.month(input)\n    return s\n  },\n\n  //q1, q2, q3, q4\n  quarter: function(num) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '')\n        num = parseInt(num, 10)\n      }\n      if (quarters[num]) {\n        let s = this.clone()\n        let month = quarters[num][0]\n        s = s.month(month)\n        s = s.date(1)\n        s = s.startOf('day')\n        return s\n      }\n    }\n    let month = this.d.getMonth()\n    for (let i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1\n      }\n    }\n    return 4\n  },\n\n  //spring, summer, winter, fall\n  season: function(input) {\n    let hem = 'north'\n    if (this.hemisphere() === 'South') {\n      hem = 'south'\n    }\n    if (input !== undefined) {\n      let s = this.clone()\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1])\n          s = s.date(1)\n          s = s.startOf('day')\n        }\n      }\n      return s\n    }\n    let month = this.d.getMonth()\n    for (let i = 0; i < seasons[hem].length - 1; i++) {\n      if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n        return seasons[hem][i][0]\n      }\n    }\n    return 'winter'\n  },\n\n  //the year number\n  year: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.year(s, num)\n      return s\n    }\n    return this.d.getFullYear()\n  },\n\n  //bc/ad years\n  era: function(str) {\n    if (str !== undefined) {\n      let s = this.clone()\n      str = str.toLowerCase()\n      //TODO: there is no year-0AD i think. may have off-by-1 error here\n      let year = s.d.getFullYear()\n      //make '1992' into 1992bc..\n      if (str === 'bc' && year > 0) {\n        s.epoch = set.year(s, year * -1)\n      }\n      //make '1992bc' into '1992'\n      if (str === 'ad' && year < 0) {\n        s.epoch = set.year(s, year * -1)\n      }\n      return s\n    }\n    if (this.d.getFullYear() < 0) {\n      return 'BC'\n    }\n    return 'AD'\n  }\n}\nmodule.exports = methods\n","const methods = Object.assign({}, require('./01-time'), require('./02-date'), require('./03-year'))\n\n//aliases\nmethods.milliseconds = methods.millisecond\nmethods.seconds = methods.second\nmethods.minutes = methods.minute\nmethods.hours = methods.hour\nmethods.hour24 = methods.hour\nmethods.h12 = methods.hour12\nmethods.h24 = methods.hour24\nmethods.days = methods.day\n\nconst addMethods = Space => {\n  //hook the methods into prototype\n  Object.keys(methods).forEach(k => {\n    Space.prototype[k] = methods[k]\n  })\n}\n\nmodule.exports = addMethods\n","const walkTo = require('./set/walk')\nconst ms = require('../data/milliseconds')\nconst monthLength = require('../data/monthLengths')\nconst fns = require('../fns')\n\nconst order = ['millisecond', 'second', 'minute', 'hour', 'date', 'month']\nlet keep = {\n  second: order.slice(0, 1),\n  minute: order.slice(0, 2),\n  quarterhour: order.slice(0, 2),\n  hour: order.slice(0, 3),\n  date: order.slice(0, 4),\n  month: order.slice(0, 4),\n  quarter: order.slice(0, 4),\n  season: order.slice(0, 4),\n  year: order,\n  decade: order,\n  century: order\n}\nkeep.week = keep.hour\nkeep.season = keep.date\nkeep.quarter = keep.date\n\n// Units need to be dst adjuested\nconst dstAwareUnits = {\n  year: true,\n  quarter: true,\n  season: true,\n  month: true,\n  week: true,\n  day: true\n}\n\nconst keepDate = {\n  month: true,\n  quarter: true,\n  season: true,\n  year: true\n}\n//month is the only thing we 'model/compute'\n//- because ms-shifting can be off by enough\nconst rollMonth = (want, old) => {\n  //increment year\n  if (want.month > 0) {\n    let years = parseInt(want.month / 12, 10)\n    want.year = old.year() + years\n    want.month = want.month % 12\n  } else if (want.month < 0) {\n    //decrement year\n    let years = Math.floor(Math.abs(want.month) / 13, 10)\n    years = Math.abs(years) + 1\n    want.year = old.year() - years\n    //ignore extras\n    want.month = want.month % 12\n    want.month = want.month + 12\n    if (want.month === 12) {\n      want.month = 0\n    }\n  }\n  return want\n}\n\nconst addMethods = SpaceTime => {\n  SpaceTime.prototype.add = function(num, unit) {\n    let s = this.clone()\n    if (!unit || num === 0) {\n      return s //don't bother\n    }\n    let old = this.clone()\n    unit = fns.normalize(unit)\n    //move forward by the estimated milliseconds (rough)\n    if (ms[unit]) {\n      s.epoch += ms[unit] * num\n    } else if (unit === 'week') {\n      s.epoch += ms.day * (num * 7)\n    } else if (unit === 'quarter' || unit === 'season') {\n      s.epoch += ms.month * (num * 4)\n    } else if (unit === 'season') {\n      s.epoch += ms.month * (num * 4)\n    } else if (unit === 'quarterhour') {\n      s.epoch += ms.minute * 15 * num\n    }\n    //now ensure our milliseconds/etc are in-line\n    let want = {}\n    if (keep[unit]) {\n      keep[unit].forEach(u => {\n        want[u] = old[u]()\n      })\n    }\n\n    if (dstAwareUnits[unit]) {\n      const diff = old.timezone().current.offset - s.timezone().current.offset\n      s.epoch += diff * 3600 * 1000\n    }\n\n    //ensure month/year has ticked-over\n    if (unit === 'month') {\n      want.month = old.month() + num\n      //month is the one unit we 'model' directly\n      want = rollMonth(want, old)\n    }\n    //support coercing a week, too\n    if (unit === 'week') {\n      let sum = old.date() + num * 7\n      if (sum <= 28 && sum > 1) {\n        want.date = sum\n      }\n    }\n    //support 25-hour day-changes on dst-changes\n    else if (unit === 'date') {\n      //specify a naive date number, if it's easy to do...\n      let sum = old.date() + num\n      if (sum <= 28 && sum > 1) {\n        want.date = sum\n      }\n      //or if we haven't moved at all..\n      else if (num !== 0 && old.isSame(s, 'day')) {\n        want.date = old.date() + num\n      }\n    }\n    //ensure year has changed (leap-years)\n    else if (unit === 'year' && s.year() === old.year()) {\n      s.epoch += ms.week\n    }\n    //these are easier\n    else if (unit === 'decade') {\n      want.year = s.year() + 10\n    } else if (unit === 'century') {\n      want.year = s.year() + 100\n    }\n    //keep current date, unless the month doesn't have it.\n    if (keepDate[unit]) {\n      let max = monthLength[want.month]\n      want.date = old.date()\n      if (want.date > max) {\n        want.date = max\n      }\n    }\n    walkTo(s, want)\n    return s\n  }\n\n  //subtract is only add *-1\n  SpaceTime.prototype.subtract = function(num, unit) {\n    let s = this.clone()\n    return s.add(num * -1, unit)\n  }\n  //add aliases\n  SpaceTime.prototype.minus = SpaceTime.prototype.subtract\n  SpaceTime.prototype.plus = SpaceTime.prototype.add\n}\n\nmodule.exports = addMethods\n","//make a string, for easy comparison between dates\nconst print = {\n  millisecond: s => {\n    return s.epoch\n  },\n  second: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute(), s.second()].join('-')\n  },\n  minute: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute()].join('-')\n  },\n  hour: s => {\n    return [s.year(), s.month(), s.date(), s.hour()].join('-')\n  },\n  day: s => {\n    return [s.year(), s.month(), s.date()].join('-')\n  },\n  week: s => {\n    return [s.year(), s.week()].join('-')\n  },\n  month: s => {\n    return [s.year(), s.month()].join('-')\n  },\n  quarter: s => {\n    return [s.year(), s.quarter()].join('-')\n  },\n  year: s => {\n    return s.year()\n  }\n}\nprint.date = print.day\n\nconst addMethods = SpaceTime => {\n  SpaceTime.prototype.isSame = function(b, unit) {\n    let a = this\n    if (!unit) {\n      return null\n    }\n    if (typeof b === 'string' || typeof b === 'number') {\n      b = new SpaceTime(b, this.timezone.name)\n    }\n    //support 'seconds' aswell as 'second'\n    unit = unit.replace(/s$/, '')\n\n    if (print[unit]) {\n      return print[unit](a) === print[unit](b)\n    }\n    return null\n  }\n}\n\nmodule.exports = addMethods\n","const fns = require('../fns')\n\nconst addMethods = SpaceTime => {\n  const methods = {\n    isAfter: function(d) {\n      d = fns.beADate(d, this)\n      let epoch = fns.getEpoch(d)\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch > epoch\n    },\n    isBefore: function(d) {\n      d = fns.beADate(d, this)\n      let epoch = fns.getEpoch(d)\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch < epoch\n    },\n    isEqual: function(d) {\n      d = fns.beADate(d, this)\n      let epoch = fns.getEpoch(d)\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch === epoch\n    },\n    isBetween: function(start, end) {\n      start = fns.beADate(start, this)\n      end = fns.beADate(end, this)\n      let startEpoch = fns.getEpoch(start)\n      if (startEpoch === null) {\n        return null\n      }\n      let endEpoch = fns.getEpoch(end)\n      if (endEpoch === null) {\n        return null\n      }\n      return startEpoch < this.epoch && this.epoch < endEpoch\n    }\n  }\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k]\n  })\n}\n\nmodule.exports = addMethods\n","const fns = require('../fns')\nconst days = require('../data/days')\nconst months = require('../data/months')\n\nconst addMethods = SpaceTime => {\n  const methods = {\n    i18n: data => {\n      //change the day names\n      if (fns.isObject(data.days)) {\n        days.set(data.days)\n      }\n      //change the month names\n      if (fns.isObject(data.months)) {\n        months.set(data.months)\n      }\n    }\n  }\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k]\n  })\n}\n\nmodule.exports = addMethods\n","const quickOffset = require('./timezone/quick')\nconst findTz = require('./timezone/find')\nconst handleInput = require('./input')\nconst methods = require('./methods')\nlet timezones = require('../zonefile/unpack')\n\n//fake timezone-support, for fakers (es5 class)\nconst SpaceTime = function(input, tz, options = {}) {\n  //the holy moment\n  this.epoch = null\n  //the shift for the given timezone\n  this.tz = findTz(tz, timezones)\n  //whether to output warnings to console\n  this.silent = options.silent || true\n\n  //does the week start on sunday, or monday:\n  this._weekStart = 1 //default to monday\n  if (options.weekStart !== undefined) {\n    this._weekStart = options.weekStart\n  }\n  //add getter/setters\n  Object.defineProperty(this, 'd', {\n    //return a js date object\n    get: function() {\n      let offset = quickOffset(this)\n      //every computer is somewhere- get this computer's built-in offset\n      let bias = new Date(this.epoch).getTimezoneOffset() || 0\n      //movement\n      let shift = bias + offset * 60 //in minutes\n      shift = shift * 60 * 1000 //in ms\n      //remove this computer's offset\n      let epoch = this.epoch + shift\n      let d = new Date(epoch)\n      return d\n    }\n  })\n  //add this data on the object, to allow adding new timezones\n  Object.defineProperty(this, 'timezones', {\n    get: () => timezones,\n    set: obj => {\n      timezones = obj\n      return obj\n    }\n  })\n  //parse the various formats\n  if (input !== undefined || input === null) {\n    let tmp = handleInput(this, input, tz, options)\n    this.epoch = tmp.epoch\n  }\n}\n\n//(add instance methods to prototype)\nObject.keys(methods).forEach(k => {\n  SpaceTime.prototype[k] = methods[k]\n})\n\n// ¯\\_(ツ)_/¯\nSpaceTime.prototype.clone = function() {\n  return new SpaceTime(this.epoch, this.tz, {\n    silent: this.silent,\n    weekStart: this._weekStart\n  })\n}\n\n//append more methods\nrequire('./methods/query')(SpaceTime)\nrequire('./methods/add')(SpaceTime)\nrequire('./methods/same')(SpaceTime)\nrequire('./methods/compare')(SpaceTime)\nrequire('./methods/i18n')(SpaceTime)\n\nmodule.exports = SpaceTime\n","const Spacetime = require('./spacetime')\n// const timezones = require('../data');\n\nconst whereIts = (a, b) => {\n  let start = new Spacetime(null)\n  let end = new Spacetime(null)\n  start = start.time(a)\n  //if b is undefined, use as 'within one hour'\n  if (b) {\n    end = end.time(b)\n  } else {\n    end = start.add(59, 'minutes')\n  }\n\n  let startHour = start.hour()\n  let endHour = end.hour()\n  let tzs = Object.keys(start.timezones).filter(tz => {\n    if (tz.indexOf('/') === -1) {\n      return false\n    }\n    let m = new Spacetime(null, tz)\n    let hour = m.hour()\n    //do 'calendar-compare' not real-time-compare\n    if (hour >= startHour && hour <= endHour) {\n      //test minutes too, if applicable\n      if (hour === startHour && m.minute() < start.minute()) {\n        return false\n      }\n      if (hour === endHour && m.minute() > end.minute()) {\n        return false\n      }\n      return true\n    }\n    return false\n  })\n  return tzs\n}\nmodule.exports = whereIts\n","module.exports = '5.10.0'","const Spacetime = require('./spacetime')\nconst whereIts = require('./whereIts')\nconst version = require('../_version')\n\nconst main = (input, tz, options) => new Spacetime(input, tz, options)\n\n//some helper functions on the main method\nmain.now = (tz, options) => new Spacetime(new Date().getTime(), tz, options)\nmain.today = (tz, options) => {\n  let s = new Spacetime(new Date().getTime(), tz, options)\n  return s.startOf('day')\n}\nmain.tomorrow = (tz, options) => {\n  let s = new Spacetime(new Date().getTime(), tz, options)\n  return s.add(1, 'day').startOf('day')\n}\nmain.yesterday = (tz, options) => {\n  let s = new Spacetime(new Date().getTime(), tz, options)\n  return s.subtract(1, 'day').startOf('day')\n}\nmain.extend = function(obj) {\n  Object.keys(obj).forEach(k => {\n    Spacetime.prototype[k] = obj[k]\n  })\n  return this\n}\n//find tz by time\nmain.whereIts = whereIts\nmain.version = version\n\n//aliases:\nmain.plugin = main.extend\nmodule.exports = main\n"],"names":["require$$0","isSummer","prefixes","informal","guessTz","tzs","ms","monthLengths","months","hasDate","parseOffset","walkTo","parseTime","strFmt","isoOffset","units","diffOne","findTz","inSummerTime","display","input","handleInput","timezone","format","unixFmt","ends","progress","nearest","diff","since","every","monthLength","methods","require$$1","require$$2","order","addMethods","quickOffset","require$$3","require$$4","require$$5","Spacetime","main","whereIts","version"],"mappings":"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"}