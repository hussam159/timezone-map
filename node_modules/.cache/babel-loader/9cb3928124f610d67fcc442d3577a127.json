{"ast":null,"code":"import _classCallCheck from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hussamm/Desktop/timezone-map-master/src/views/Main.js\";\nimport React from 'react';\nimport spacetime from 'spacetime';\nimport Piechart from '../components/Piechart.jsx';\nimport Map from '../components/Map';\nimport { BASE_COLOR, BORDER_COLOR, HOVER_COLOR, HOVER_BORDER_COLOR, PRESSED_COLOR, PRESSED_BORDER_COLOR, SELECTED_COLOR } from '../constants/colors';\nimport { getShadedColor } from '../utils/color';\n\nvar Main = /*#__PURE__*/function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: {},\n      hour: '',\n      minute: '',\n      seconds: '',\n      dayTime: ''\n    };\n\n    _this.getMapStyles = function (geography, index) {\n      return {\n        default: {\n          outline: 'none',\n          transition: '.5s',\n          stroke: BORDER_COLOR,\n          fill: _this.state.selected.id === geography.id ? SELECTED_COLOR : getShadedColor(BASE_COLOR, index)\n        },\n        hover: {\n          outline: 'none',\n          cursor: 'pointer',\n          stroke: HOVER_BORDER_COLOR,\n          fill: _this.state.selected.id === geography.id ? SELECTED_COLOR : HOVER_COLOR\n        },\n        pressed: {\n          outline: 'none',\n          cursor: 'pointer',\n          fill: PRESSED_COLOR,\n          stroke: PRESSED_BORDER_COLOR\n        }\n      };\n    };\n\n    _this.getCurrentTime = function () {\n      var time = spacetime.now(_this.state.selected.id); //:mm:ss a\n\n      _this.setState(function () {\n        return {\n          hour: time.unixFmt('h'),\n          minute: time.unixFmt('mm'),\n          seconds: time.unixFmt('ss'),\n          dayTime: time.unixFmt('a')\n        };\n      });\n    };\n\n    _this.handleClick = function (geography) {\n      _this.setState(function (prevState) {\n        return {\n          selected: prevState.selected.id !== geography.id ? geography : {}\n        };\n      });\n\n      _this.getCurrentTime();\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'position': 'fixed'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Piechart, {\n        x: 200,\n        y: 100,\n        outerRadius: 100,\n        innerRadius: 50,\n        data: [{\n          value: 30,\n          label: this.state.hour\n        }, {\n          value: 30,\n          label: this.state.minute\n        }, {\n          value: 30,\n          label: this.state.seconds\n        }, {\n          value: 30,\n          label: this.state.dayTime\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          'text-align': 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, this.state.selected.id)), /*#__PURE__*/React.createElement(Map, {\n        getStyles: this.getMapStyles,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }), this.state.selected.id && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, this.getCurrentTime)));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/hussamm/Desktop/timezone-map-master/src/views/Main.js"],"names":["React","spacetime","Piechart","Map","BASE_COLOR","BORDER_COLOR","HOVER_COLOR","HOVER_BORDER_COLOR","PRESSED_COLOR","PRESSED_BORDER_COLOR","SELECTED_COLOR","getShadedColor","Main","state","selected","hour","minute","seconds","dayTime","getMapStyles","geography","index","default","outline","transition","stroke","fill","id","hover","cursor","pressed","getCurrentTime","time","now","setState","unixFmt","handleClick","prevState","value","label","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport spacetime from 'spacetime';\nimport Piechart from '../components/Piechart.jsx'\nimport Map from '../components/Map';\n\nimport { BASE_COLOR, BORDER_COLOR, HOVER_COLOR, HOVER_BORDER_COLOR, PRESSED_COLOR, PRESSED_BORDER_COLOR, SELECTED_COLOR } from '../constants/colors';\n\nimport { getShadedColor } from '../utils/color';\n\nclass Main extends React.Component {\n  state = {\n    selected: {},\n    hour:'',\n    minute:'',\n    seconds:'',\n    dayTime:''\n  };\n\n  getMapStyles = (geography, index) => {\n    return {\n      default: {\n        outline: 'none',\n        transition: '.5s',\n        stroke: BORDER_COLOR,\n        fill: this.state.selected.id === geography.id ? SELECTED_COLOR : getShadedColor(BASE_COLOR, index)\n      },\n      hover: {\n        outline: 'none',\n        cursor: 'pointer',\n        stroke: HOVER_BORDER_COLOR,\n        fill: this.state.selected.id === geography.id ? SELECTED_COLOR : HOVER_COLOR\n      },\n      pressed: {\n        outline: 'none',\n        cursor: 'pointer',\n        fill: PRESSED_COLOR,\n        stroke: PRESSED_BORDER_COLOR,\n      }\n    };\n  };\n\n  getCurrentTime = () => {\n    const time = spacetime.now(this.state.selected.id);\n    //:mm:ss a\n     this.setState(() => ({\n      hour:time.unixFmt('h'),\n      minute:time.unixFmt('mm'),\n      seconds:time.unixFmt('ss'),\n      dayTime:time.unixFmt('a')\n    }));\n  };\n\n  handleClick = geography => {\n    this.setState(prevState => ({\n      selected: prevState.selected.id !== geography.id ? geography : {}\n    }));\n    this.getCurrentTime();\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={{ 'position': 'fixed'}}>\n        <Piechart x={200} y={100} outerRadius={100} innerRadius={50}\n          data={[{value: 30, label: this.state.hour},\n          {value: 30, label: this.state.minute},\n          {value: 30, label: this.state.seconds},\n          {value: 30, label: this.state.dayTime}]} />\n        <p style={{'text-align': 'center'}}>{this.state.selected.id}</p>\n\n                 </div>\n        <Map getStyles={this.getMapStyles} onClick={this.handleClick} />\n        {this.state.selected.id && (\n          <div className=\"time-details\">\n            <p>{this.getCurrentTime}</p>\n          </div>\n          \n        )}\n        \n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}