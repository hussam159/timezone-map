{"ast":null,"code":"import _classCallCheck from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hussamm/Desktop/timezone-map-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hussamm/Desktop/timezone-map-master/src/views/Main.js\";\nimport React from 'react';\nimport spacetime from 'spacetime';\nimport Piechart from '../components/Piechart.jsx';\nimport Map from '../components/Map';\nimport { BASE_COLOR, BORDER_COLOR, HOVER_COLOR, HOVER_BORDER_COLOR, PRESSED_COLOR, PRESSED_BORDER_COLOR, SELECTED_COLOR } from '../constants/colors';\nimport { getShadedColor } from '../utils/color';\n\nvar Main = /*#__PURE__*/function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: {}\n    };\n\n    _this.getMapStyles = function (geography, index) {\n      return {\n        default: {\n          outline: 'none',\n          transition: '.5s',\n          stroke: BORDER_COLOR,\n          fill: _this.state.selected.id === geography.id ? SELECTED_COLOR : getShadedColor(BASE_COLOR, index)\n        },\n        hover: {\n          outline: 'none',\n          cursor: 'pointer',\n          stroke: HOVER_BORDER_COLOR,\n          fill: _this.state.selected.id === geography.id ? SELECTED_COLOR : HOVER_COLOR\n        },\n        pressed: {\n          outline: 'none',\n          cursor: 'pointer',\n          fill: PRESSED_COLOR,\n          stroke: PRESSED_BORDER_COLOR\n        }\n      };\n    };\n\n    _this.getCurrentTime = function (timezone) {\n      var time = spacetime.now(timezone);\n      return time.unixFmt('yyyy-MM-dd h:mm a');\n    };\n\n    _this.handleClick = function (geography) {\n      _this.setState(function (prevState) {\n        return {\n          selected: prevState.selected.id !== geography.id ? geography : {}\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          'padding-bottom': '50px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Piechart, {\n        x: 350,\n        y: 100,\n        outerRadius: 100,\n        innerRadius: 50,\n        data: [{\n          value: 92 - 34,\n          label: 'Code lines'\n        }, {\n          value: 34,\n          label: 'Empty lines'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Map, {\n        getStyles: this.getMapStyles,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), this.state.selected.id && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, this.state.selected.id), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, this.getCurrentTime(this.state.selected.id))));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/hussamm/Desktop/timezone-map-master/src/views/Main.js"],"names":["React","spacetime","Piechart","Map","BASE_COLOR","BORDER_COLOR","HOVER_COLOR","HOVER_BORDER_COLOR","PRESSED_COLOR","PRESSED_BORDER_COLOR","SELECTED_COLOR","getShadedColor","Main","state","selected","getMapStyles","geography","index","default","outline","transition","stroke","fill","id","hover","cursor","pressed","getCurrentTime","timezone","time","now","unixFmt","handleClick","setState","prevState","value","label","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport spacetime from 'spacetime';\nimport Piechart from '../components/Piechart.jsx'\nimport Map from '../components/Map';\n\nimport { BASE_COLOR, BORDER_COLOR, HOVER_COLOR, HOVER_BORDER_COLOR, PRESSED_COLOR, PRESSED_BORDER_COLOR, SELECTED_COLOR } from '../constants/colors';\n\nimport { getShadedColor } from '../utils/color';\n\nclass Main extends React.Component {\n  state = {\n    selected: {}\n  };\n\n  getMapStyles = (geography, index) => {\n    return {\n      default: {\n        outline: 'none',\n        transition: '.5s',\n        stroke: BORDER_COLOR,\n        fill: this.state.selected.id === geography.id ? SELECTED_COLOR : getShadedColor(BASE_COLOR, index)\n      },\n      hover: {\n        outline: 'none',\n        cursor: 'pointer',\n        stroke: HOVER_BORDER_COLOR,\n        fill: this.state.selected.id === geography.id ? SELECTED_COLOR : HOVER_COLOR\n      },\n      pressed: {\n        outline: 'none',\n        cursor: 'pointer',\n        fill: PRESSED_COLOR,\n        stroke: PRESSED_BORDER_COLOR,\n      }\n    };\n  };\n\n  getCurrentTime = timezone => {\n    const time = spacetime.now(timezone);\n\n    return time.unixFmt('yyyy-MM-dd h:mm a');\n  };\n\n  handleClick = geography => {\n    this.setState(prevState => ({\n      selected: prevState.selected.id !== geography.id ? geography : {}\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={{'padding-bottom': '50px'}}>\n        <Piechart x={350} y={100} outerRadius={100} innerRadius={50}\n          data={[{value: 92-34, label: 'Code lines'},\n                 {value: 34, label: 'Empty lines'}]} />\n                 </div>\n        <Map getStyles={this.getMapStyles} onClick={this.handleClick} />\n        {this.state.selected.id && (\n          <div className=\"time-details\">\n            <p>{this.state.selected.id}</p>\n            <p>{this.getCurrentTime(this.state.selected.id)}</p>\n          </div>\n          \n        )}\n        \n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}