{"ast":null,"code":"function interpolate(value, x1, x2, y1, y2) {\n  return y1 + (value - x1) / (x2 - x1) * (y2 - y1);\n}\n\nfunction shadeColor(col, amt) {\n  var usePound = false;\n\n  if (col[0] === '#') {\n    col = col.slice(1);\n    usePound = true;\n  }\n\n  var num = parseInt(col, 16);\n  var r = (num >> 16) + amt;\n  if (r > 255) r = 255;else if (r < 0) r = 0;\n  var b = (num >> 8 & 0x00ff) + amt;\n  if (b > 255) b = 255;else if (b < 0) b = 0;\n  var g = (num & 0x0000ff) + amt;\n  if (g > 255) g = 255;else if (g < 0) g = 0;\n  return (usePound ? '#' : '') + (g | b << 8 | r << 16).toString(16);\n}\n\nexport function getShadedColor(color, index) {\n  return shadeColor(color, interpolate(index, 0, 300, -20, 20));\n}","map":{"version":3,"sources":["/Users/hussamm/Desktop/timezone-map-master/src/utils/color.js"],"names":["interpolate","value","x1","x2","y1","y2","shadeColor","col","amt","usePound","slice","num","parseInt","r","b","g","toString","getShadedColor","color","index"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwCC,EAAxC,EAA4C;AAC1C,SAAOD,EAAE,GAAI,CAACH,KAAK,GAAGC,EAAT,KAAgBC,EAAE,GAAGD,EAArB,CAAD,IAA8BG,EAAE,GAAGD,EAAnC,CAAZ;AACD;;AAED,SAASE,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,MAAIC,QAAQ,GAAG,KAAf;;AAEA,MAAIF,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAClBA,IAAAA,GAAG,GAAGA,GAAG,CAACG,KAAJ,CAAU,CAAV,CAAN;AACAD,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,MAAIE,GAAG,GAAGC,QAAQ,CAACL,GAAD,EAAM,EAAN,CAAlB;AAEA,MAAIM,CAAC,GAAG,CAACF,GAAG,IAAI,EAAR,IAAcH,GAAtB;AAEA,MAAIK,CAAC,GAAG,GAAR,EAAaA,CAAC,GAAG,GAAJ,CAAb,KACK,IAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG,CAAJ;AAEhB,MAAIC,CAAC,GAAG,CAAEH,GAAG,IAAI,CAAR,GAAa,MAAd,IAAwBH,GAAhC;AAEA,MAAIM,CAAC,GAAG,GAAR,EAAaA,CAAC,GAAG,GAAJ,CAAb,KACK,IAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG,CAAJ;AAEhB,MAAIC,CAAC,GAAG,CAACJ,GAAG,GAAG,QAAP,IAAmBH,GAA3B;AAEA,MAAIO,CAAC,GAAG,GAAR,EAAaA,CAAC,GAAG,GAAJ,CAAb,KACK,IAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG,CAAJ;AAEhB,SAAO,CAACN,QAAQ,GAAG,GAAH,GAAS,EAAlB,IAAwB,CAACM,CAAC,GAAID,CAAC,IAAI,CAAV,GAAgBD,CAAC,IAAI,EAAtB,EAA2BG,QAA3B,CAAoC,EAApC,CAA/B;AACD;;AAED,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AAC3C,SAAOb,UAAU,CAACY,KAAD,EAAQlB,WAAW,CAACmB,KAAD,EAAQ,CAAR,EAAW,GAAX,EAAgB,CAAC,EAAjB,EAAqB,EAArB,CAAnB,CAAjB;AACD","sourcesContent":["function interpolate(value, x1, x2, y1, y2) {\n  return y1 + ((value - x1) / (x2 - x1)) * (y2 - y1);\n}\n\nfunction shadeColor(col, amt) {\n  let usePound = false;\n\n  if (col[0] === '#') {\n    col = col.slice(1);\n    usePound = true;\n  }\n\n  let num = parseInt(col, 16);\n\n  let r = (num >> 16) + amt;\n\n  if (r > 255) r = 255;\n  else if (r < 0) r = 0;\n\n  let b = ((num >> 8) & 0x00ff) + amt;\n\n  if (b > 255) b = 255;\n  else if (b < 0) b = 0;\n\n  let g = (num & 0x0000ff) + amt;\n\n  if (g > 255) g = 255;\n  else if (g < 0) g = 0;\n\n  return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function getShadedColor(color, index) {\n  return shadeColor(color, interpolate(index, 0, 300, -20, 20));\n}\n"]},"metadata":{},"sourceType":"module"}